name: dotnet format

on:
  workflow_dispatch:
  push:
    branches: [ main ]
    paths-ignore:
    - "**.md"

defaults:
  run:
    shell: pwsh

jobs:
  check-open-pr:
    name: Check for dotnet format open PR
    runs-on: ubuntu-latest
    outputs:
      can-create-pr: ${{ steps.open-pr-check.outputs.can-create-pr }}
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Check for open dotnet format PRs
      id: open-pr-check
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        # Only create a PR if there isn't any dotnet format PR open
        # This prevents multiple pull requests being open to fix the same dotnet format issues
        $openPullRequestsResult = gh pr list --state open --label dotnet-format
        $canCreatePr = [string]::IsNullOrEmpty($openPullRequestsResult)
        Write-Host "::set-output name=can-create-pr::$canCreatePr"  
  dotnet-format:
    name: dotnet format
    needs: [check-open-pr]
    if: needs.check-open-pr.outputs.can-create-pr == 'True'
    runs-on: ubuntu-latest
    env:
      SLN_FILEPATH : ${{ github.workspace }}/DotNet.Sdk.Extensions.sln
      DOTNET_VERSION : 5.0.303
    steps:
    - name: Debug github event
      run: |
        $githubContext = '${{toJSON(github)}}'
        Write-Host $githubContext
    - name: Checkout
      uses: actions/checkout@v2
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}
    - name: Install dotnet-format dotnet tool
      run:  dotnet tool install --global dotnet-format    
    - name: Cache/Restore NuGets
      uses: actions/cache@v2
      with:
        path:
          ~/.nuget/packages
        key: ${{ runner.os }}-nuget-${{ env.DOTNET_VERSION }}
        restore-keys: |
          ${{ runner.os }}-nuget-
    - name: Restore dependencies
      run: dotnet restore ${{ env.SLN_FILEPATH }}
    - name: dotnet format
      run: |
        dotnet format ${{ env.SLN_FILEPATH }} `
          --fix-whitespace `
          --fix-style info `
          --fix-analyzers info `
          --verbosity diagnostic
    - name: Set branch name
      id: set-branch-name
      run: |
        $branchSuffix = (Get-Date).ToString("dd-MMM-yyyy") 
        $branchName = "dotnet-format-$branchSuffix"
        Write-Host "::set-output name=branch-name::$branchName"
    - name: Push dotnet format changes
      uses: stefanzweifel/git-auto-commit-action@v4.11.0
      with:
        commit_message: auto dotnet format
        branch: ${{ steps.set-branch-name.outputs.branch-name }}
    # - name: dotnet format
    #   run: |
    #     $maxAttempts = 5
    #     $attempt = 0

    #     git config --local user.name "actions-user"
    #     git config --local user.email "actions-user@github.com"
    #     $branchSuffix = (Get-Date).ToString("dd-MMM-yyyy") 
    #     $branchName = "dotnet-format-$branchSuffix"
    #     git checkout -b $branchName

    #     while($attempt -le $maxAttempts) {
    #       $attempt++

    #       Write-Host "::group::Running dotnet format attempt number $attempt"
    #       dotnet format ${{env.SLN_FILEPATH}} `
    #         --fix-whitespace `
    #         --fix-style info `
    #         --fix-analyzers info `
    #         --verbosity diagnostic
    #       Write-Host "::endgroup::"

    #       git diff-index --quiet HEAD
    #       if($LASTEXITCODE -eq 0){
    #         break
    #       }
    #       else {
    #         Write-Host "::group::Commit changes for dotnet format attempt number $attempt"
    #         # $branch="${{ github.event.pull_request.head.ref }}"
    #         # git checkout $branch
    #         # git fetch --depth=1
    #         # git config --local user.name "actions-user"
    #         # git config --local user.email "actions-user@github.com"
    #         # git commit -a -m "auto dotnet format attempt number $attempt"
    #         # git push --set-upstream origin "HEAD:$branch" --atomic
    #         # git push

    #         Write-Host "::endgroup::"
    #       }
    #     }

    #     if($attempt -gt $maxAttempts) {
    #       Write-Host "::error::dotnet format couldn't format the solution after $maxAttempts attempts"
    #     }
    #     else {
    #       Write-Host "dotnet format formatted the solution after $attempt attempts"
    #     }

    # - name: Push dotnet format changes
    #   uses: stefanzweifel/git-auto-commit-action@v4.11.0
    #   with:
    #     commit_message: auto dotnet format


