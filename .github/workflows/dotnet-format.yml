name: dotnet format

on:
  workflow_dispatch:
  push:
    branches: [ main ]
    paths-ignore:
    - "**.md"

env:
  DOTNET_FORMAT_LABEL : dotnet-format

defaults:
  run:
    shell: pwsh

jobs:
  check-open-pr:
    name: Check for dotnet format open PR
    runs-on: ubuntu-latest
    outputs:
      can-create-pr: ${{ steps.open-pr-check.outputs.can-create-pr }}
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Check for open dotnet format PRs
      id: open-pr-check
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        # Only create a PR if there isn't any dotnet format PR open
        # This prevents multiple pull requests being open to fix the same dotnet format issues
        $openPullRequestsResult = gh pr list --state open --label ${{ env.DOTNET_FORMAT_LABEL }}
        $canCreatePr = [string]::IsNullOrEmpty($openPullRequestsResult)
        Write-Host "::set-output name=can-create-pr::$canCreatePr"
        
        if($canCreatePr) {
          Write-Host "There isn't any open dotnet format PR so this workflow will proceed with the dotnet format job."    
        }  
        else {
          Write-Host "::warning::There is an open dotnet format PR so this workflow will NOT proceed with the dotnet format job."    
        }
  dotnet-format:
    name: dotnet format
    needs: [check-open-pr]
    if: needs.check-open-pr.outputs.can-create-pr == 'True'
    runs-on: ubuntu-latest
    env:
      SLN_FILEPATH : ${{ github.workspace }}/DotNet.Sdk.Extensions.sln
      DOTNET_VERSION : 5.0.303
      WORKFLOW_RUN_URL: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}
    - name: Install dotnet-format dotnet tool
      run:  dotnet tool install --global dotnet-format    
    - name: Cache/Restore NuGets
      uses: actions/cache@v2
      with:
        path:
          ~/.nuget/packages
        key: ${{ runner.os }}-nuget-${{ env.DOTNET_VERSION }}
        restore-keys: |
          ${{ runner.os }}-nuget-
    - name: Restore dependencies
      run: dotnet restore ${{ env.SLN_FILEPATH }}
    - name: dotnet format
      run: |
        dotnet format ${{ env.SLN_FILEPATH }} `
          --fix-whitespace `
          --fix-style info `
          --fix-analyzers info `
          --verbosity diagnostic
    - name: Set commit info
      id: set-commit-info
      run: |
        $date = (Get-Date).ToString("dd-MMM-yyyy") 
        $branchName = "dotnet-format-$date"
        $commitMessage = "auto dotnet format $date"
        Write-Host "::set-output name=branch-name::$branchName"
        Write-Host "Branch name set to $branchName"
        Write-Host "::set-output name=commit-message::$commitMessage"
        Write-Host "Commit message set to $commitMessage"
    - name: Create branch
      uses: peterjgrainger/action-create-branch@v2.0.1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        branch: ${{ steps.set-commit-info.outputs.branch-name }}
    - name: Push dotnet format changes to branch
      id: auto-commit-action
      uses: stefanzweifel/git-auto-commit-action@v4.11.0
      with:
        commit_message: ${{ steps.set-commit-info.outputs.commit-message }}
        branch: ${{ steps.set-commit-info.outputs.branch-name }}
    - name: Create dotnet format PR
      if: steps.auto-commit-action.outputs.changes_detected == 'true'
      env:
        # From https://docs.github.com/en/actions/reference/authentication-in-a-workflow#using-the-github_token-in-a-workflow
        # "When you use the repository's GITHUB_TOKEN to perform tasks on behalf of
        # the GitHub Actions app, events triggered by the GITHUB_TOKEN will not create a new workflow run."
        #
        # Without using a custom GitHub token the PR would be created but no checks would be executed.
        GITHUB_TOKEN: ${{ secrets.DOTNET_FORMAT_GH_TOKEN }}
      run: |
        $title = "${{ steps.set-commit-info.outputs.branch-name }}: fix code guidelines violations"
        $body = @"
        **dotnet format** [workflow run](${{ env.WORKFLOW_RUN_URL }}) detected code guidelines violations and automatically created this PR.

        :warning: Please review the suggested changes before merging.

        **Note**: sometimes the fix provided by the analyzers adds unecessary commets when formatting files. 
        This should only happen if the project supports multiple target frameworks and the fix doesn't produce the same output for all.
        However, I found that sometimes the ``Unmerged change from project ...`` comment shows up even though the fix produced the same output.
        If this happens, just delete the comments added. Otherwise you incorporate the commented out code using [preprocessor directives to control conditional compilation](https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/preprocessor-directives#conditional-compilation).
        Example:
        ``````csharp
        #if NET5_0
            ...
        #elif NETCOREAPP3_1
            ...
        #endif
        ``````
        "@
        gh pr create `
          --title $title `
          --body $body `
          --label ${{ env.DOTNET_FORMAT_LABEL }}
