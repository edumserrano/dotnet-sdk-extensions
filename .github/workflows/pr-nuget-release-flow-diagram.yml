name: PR - NuGet release flow diagram

on:
  pull_request:
    branches: [ main ]
    types: [ closed ]

defaults:
  run:
    shell: pwsh

jobs:
  main:
    name: Create output artifacts
    if: contains(github.event.pull_request.labels.*.name, 'nuget-release')
    environment: pr-nuget-release-flow-workflow
    permissions:
      contents: read
    runs-on: ubuntu-latest
    steps:
    - name: Dump github context for debug purposes
      env:
        GITHUB_CONTEXT: ${{ toJSON(github) }}
      run: $env:GITHUB_CONTEXT
    - name: Checkout repository
      uses: actions/checkout@v3.1.0
    - name: Get release info run id
      id: release-info
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        $statuses = gh api repos/${{ github.repository }}/commits/${{ github.event.pull_request.head.sha }}/statuses | ConvertFrom-Json
        Write-Output $statuses
        $nugetReleaseInfoStatus = $statuses | Where-Object {$_.context -eq "NuGet release command handler / NuGet release info (repository_dispatch)"}
        $nugetReleaseInfoWorkflowUrl = $nugetReleaseInfoStatus.target_url
        $runId = $nugetReleaseInfoWorkflowUrl.Split("/")[-1]
        Write-Output "run-id=$runId"
        Write-Output "::set-output name=run-id::$runId"
    - name: Download NuGet release info artifact
      uses: dawidd6/action-download-artifact@v2.24.2
      with:
        workflow: nuget-release-command-handler.yml
        name:  nuget-release-info
        run_id: ${{ steps.release-info.outputs.run-id }}
    - name: Set NuGet release flow info
      id: set-nuget-release-flow-info
      run: |
        $prMerged = [System.Convert]::ToBoolean('${{ github.event.pull_request.merged }}')
        if($prMerged) {
          $workflowStatus = "ok"
          $releaseStatus = "in%20progress"
          $releaseBadgeColor = "blue"
        }
        else {
          $workflowStatus = "error"
          $releaseStatus = "failed"
          $releaseBadgeColor = "red"
        }

        $nugetInfoJson = Get-Content ./nuget-release-info.md
        $nugetInfo = $nugetInfoJson | ConvertFrom-Json
        $issueNumber = $nugetInfo.issueNumber

        Write-Output "::set-output name=issue-number::$issueNumber"
        Write-Output "::set-output name=nuget-release-status::$releaseStatus"
        Write-Output "::set-output name=nuget-release-badge-color::$releaseBadgeColor"
        Write-Output "::set-output name=nuget-release-pull-request-node-status::$workflowStatus"
    - name: Upload NuGet release flow info artifact
      uses: ./.github/actions/create-nuget-release-flow-info-artifact
      with:
        issue-number: '${{ steps.set-nuget-release-flow-info.outputs.issue-number }}'
        nuget-release-status: '${{ steps.set-nuget-release-flow-info.outputs.nuget-release-status }}'
        nuget-release-badge-color: '${{ steps.set-nuget-release-flow-info.outputs.nuget-release-badge-color }}'
        nuget-release-pull-request-node-status: '${{ steps.set-nuget-release-flow-info.outputs.nuget-release-pull-request-node-status }}'
        nuget-release-pull-request-url: '${{ github.event.pull_request.html_url }}'
