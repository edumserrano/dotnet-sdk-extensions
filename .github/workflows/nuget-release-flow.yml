name: NuGet release flow

on:
  workflow_run:
    workflows: [
      "NuGet release",
      "NuGet release command handler",
      "PR - NuGet release flow diagram",
      "NuGet publish"
    ]
    types:
    - completed

defaults:
  run:
    shell: pwsh

jobs:
  release-flow-args:
    name: Process NuGet release flow info artifact
    if: github.event.workflow_run.conclusion != 'skipped'
    environment: nuget-release-flow-workflow
    permissions:
      contents: read
    runs-on: ubuntu-latest
    outputs:
      issue-number: ${{ steps.nuget-flow-info.outputs.issue-number }}
      nuget-id: ${{ steps.nuget-flow-info.outputs.nuget-id }}
      nuget-version: ${{ steps.nuget-flow-info.outputs.nuget-version }}
      nuget-release-status: ${{ steps.nuget-flow-info.outputs.nuget-release-status }}
      nuget-release-badge-color: ${{ steps.nuget-flow-info.outputs.nuget-release-badge-color }}
      issue-nuget-release-node-status: ${{ steps.nuget-flow-info.outputs.issue-nuget-release-node-status }}
      issue-nuget-release-url: ${{ steps.nuget-flow-info.outputs.issue-nuget-release-url }}
      nuget-release-command-handler-node-status: ${{ steps.nuget-flow-info.outputs.nuget-release-command-handler-node-status }}
      nuget-release-command-handler-url: ${{ steps.nuget-flow-info.outputs.nuget-release-command-handler-url }}
      nuget-release-pull-request-node-status: ${{ steps.nuget-flow-info.outputs.nuget-release-pull-request-node-status }}
      nuget-release-pull-request-url: ${{ steps.nuget-flow-info.outputs.nuget-release-pull-request-url }}
      publish-nuget-node-status: ${{ steps.nuget-flow-info.outputs.publish-nuget-node-status }}
      publish-nuget-url: ${{ steps.nuget-flow-info.outputs.publish-nuget-url }}
    steps:
    - name: Dump github context for debug purposes
      env:
        GITHUB_CONTEXT: ${{ toJSON(github) }}
      run: $env:GITHUB_CONTEXT
    - name: Output trigger info
      run: |
        $workflowRunName = '${{ github.event.workflow_run.name }}'
        $workflowRunId = '${{ github.event.workflow_run.id }}'
        $headBranch = '${{ github.event.workflow_run.head_branch }}'
        Write-Output "::notice::This workflows was triggered by the completion of '$workflowRunName' with run id '$workflowRunId' on the branch '$headBranch'."
    - name: Checkout repository
      uses: actions/checkout@v3
    - name: Read NuGet release flow info artifact
      id: nuget-flow-info
      uses: ./.github/actions/read-nuget-release-flow-info-artifact
      with:
        workflow-id: ${{ github.event.workflow_run.workflow_id }}
        workflow-run-id: ${{ github.event.workflow_run.id }}

  update-release-flow-diagram:
    name: Update NuGet release flow diagram
    needs: [release-flow-args]
    if: needs.release-flow-args.outputs.issue-number != '' # manually triggered workflows might not have an issue to update, example when using workflow_dispatch on the nuget-publish workflow
    environment: nuget-release-flow-workflow
    permissions:
      contents: read
      issues: write
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    - name: Find NuGet release flow comment
      uses: peter-evans/find-comment@v2
      id: find-nuget-release-flow-comment
      with:
        issue-number: '${{ needs.release-flow-args.outputs.issue-number }}'
        body-includes: '<!-- nuget-release-flow -->'
        comment-author: github-actions[bot]
    - name: Parse data from NuGet flow comment
      id: parse-nuget-flow-data
      if: steps.find-nuget-release-flow-comment.outputs.comment-id != 0
      run: |
        $commentBody = '${{ steps.find-nuget-release-flow-comment.outputs.comment-body }}'

        $commentBody -match '<!-- nuget-id: (?<NugetId>.+) -->'
        $nugetId = $Matches.NugetId

        $commentBody -match '<!-- nuget-version: (?<NugetVersion>.+) -->'
        $nugetVersion = $Matches.NugetVersion

        $commentBody -match '<!-- issue-nuget-release-node-status: (?<IssueNugetReleaseNodeStatus>.+) -->'
        $issueNugetReleaseNodeStatus = $Matches.IssueNugetReleaseNodeStatus

        $commentBody -match '<!-- issue-nuget-release-url: (?<IssueNugetReleaseUrl>.+) -->'
        $issueNugetReleaseUrl = $Matches.IssueNugetReleaseUrl

        $commentBody -match '<!-- nuget-release-command-handler-node-status: (?<NugetReleaseCommandHandlerNodeStatus>.+) -->'
        $nugetReleaseCommandHandlerNodeStatus = $Matches.NugetReleaseCommandHandlerNodeStatus

        $commentBody -match '<!-- nuget-release-command-handler-url: (?<NugetReleaseCommandHandlerUrl>.+) -->'
        $nugetReleaseCommandHandlerUrl = $Matches.NugetReleaseCommandHandlerUrl

        $commentBody -match '<!-- nuget-release-pull-request-node-status: (?<NugetReleasePullRequestNodeStatus>.+) -->'
        $nugetReleasePullRequestNodeStatus = $Matches.NugetReleasePullRequestNodeStatus

        $commentBody -match '<!-- nuget-release-pull-request-url: (?<NugetReleasePullRequestUrl>.+) -->'
        $nugetReleasePullRequestUrl = $Matches.NugetReleasePullRequestUrl

        Write-Output "::set-output name=issue-nuget-id::$nugetId"
        Write-Output "::set-output name=issue-nuget-version::$nugetVersion"
        Write-Output "::set-output name=issue-nuget-release-node-status::$issueNugetReleaseNodeStatus"
        Write-Output "::set-output name=issue-nuget-release-url::$issueNugetReleaseUrl"
        Write-Output "::set-output name=nuget-release-command-handler-node-status::$nugetReleaseCommandHandlerNodeStatus"
        Write-Output "::set-output name=nuget-release-command-handler-url::$nugetReleaseCommandHandlerUrl"
        Write-Output "::set-output name=nuget-release-pull-request-node-status::$nugetReleasePullRequestNodeStatus"
        Write-Output "::set-output name=nuget-release-pull-request-url::$nugetReleasePullRequestUrl"
    - name: Dump outputs from previous step
      env:
        STEP_OUTPUT: ${{ toJSON(steps.parse-nuget-flow-data.outputs) }}
      run: $env:STEP_OUTPUT
    - name: Read nuget release flow info
      id: nuget-release-flow-info
      run: |
        # the value is defined in the following order:
        # 1 - if it exists in the NuGet release flow info artifact
        # 2 - use default value for a node if the node from the NuGet release flow info artifact is an ancestor node
        # 2 - if it exists in the parsed data from the nuget release flow comment
        # 3 - use a default value

        # default values
        $issueNugetReleaseNodeStatus = 'default'
        $issueNugetReleaseUrl = 'empty'
        $nugetReleaseCommandHandlerNodeStatus = 'default'
        $nugetReleaseCommandHandlerUrl = 'empty'
        $nugetReleasePullRequestNodeStatus = 'default'
        $nugetReleasePullRequestUrl = 'empty'
        $publishNugetNodeStatus = 'default'
        $publishNugetUrl = 'empty'

        # use parsed data from nuget release flow if exists
        $issueNugetReleaseNodeStatus = [string]::IsNullOrWhiteSpace('${{ steps.parse-nuget-flow-data.outputs.issue-nuget-release-node-status }}') `
          ? $issueNugetReleaseNodeStatus `
          : '${{ steps.parse-nuget-flow-data.outputs.issue-nuget-release-node-status }}'
        $issueNugetReleaseUrl = [string]::IsNullOrWhiteSpace('${{ steps.parse-nuget-flow-data.outputs.issue-nuget-release-url }}') `
          ? $issueNugetReleaseUrl `
          : '${{ steps.parse-nuget-flow-data.outputs.issue-nuget-release-url }}'
        $nugetReleaseCommandHandlerNodeStatus = [string]::IsNullOrWhiteSpace('${{ steps.parse-nuget-flow-data.outputs.nuget-release-command-handler-node-status }}') `
          ? $nugetReleaseCommandHandlerNodeStatus `
          : '${{ steps.parse-nuget-flow-data.outputs.nuget-release-command-handler-node-status }}'
        $nugetReleaseCommandHandlerUrl = [string]::IsNullOrWhiteSpace('${{ steps.parse-nuget-flow-data.outputs.nuget-release-command-handler-url }}') `
          ? $nugetReleaseCommandHandlerUrl `
          : '${{ steps.parse-nuget-flow-data.outputs.nuget-release-command-handler-url }}'
        $nugetReleasePullRequestNodeStatus = [string]::IsNullOrWhiteSpace('${{ steps.parse-nuget-flow-data.outputs.nuget-release-pull-request-node-status }}') `
          ? $nugetReleasePullRequestNodeStatus `
          : '${{ steps.parse-nuget-flow-data.outputs.nuget-release-pull-request-node-status }}'
        $nugetReleasePullRequestUrl = [string]::IsNullOrWhiteSpace('${{ steps.parse-nuget-flow-data.outputs.nuget-release-pull-request-url }}') `
          ? $nugetReleasePullRequestUrl `
          : '${{ steps.parse-nuget-flow-data.outputs.nuget-release-pull-request-url }}'

        # use data from the NuGet release flow info artifact if exists
        $issueNugetReleaseNodeStatus = [string]::IsNullOrWhiteSpace('${{ needs.release-flow-args.outputs.issue-nuget-release-node-status }}') `
          ? $issueNugetReleaseNodeStatus `
          : '${{ needs.release-flow-args.outputs.issue-nuget-release-node-status }}'
        $issueNugetReleaseUrl = [string]::IsNullOrWhiteSpace('${{ needs.release-flow-args.outputs.issue-nuget-release-url }}') `
          ? $issueNugetReleaseUrl `
          : '${{ needs.release-flow-args.outputs.issue-nuget-release-url }}'
        $nugetReleaseCommandHandlerNodeStatus = [string]::IsNullOrWhiteSpace('${{ needs.release-flow-args.outputs.nuget-release-command-handler-node-status }}') `
          ? $nugetReleaseCommandHandlerNodeStatus `
          : '${{ needs.release-flow-args.outputs.nuget-release-command-handler-node-status }}'
        $nugetReleaseCommandHandlerUrl = [string]::IsNullOrWhiteSpace('${{ needs.release-flow-args.outputs.nuget-release-command-handler-url }}') `
          ? $nugetReleaseCommandHandlerUrl `
          : '${{ needs.release-flow-args.outputs.nuget-release-command-handler-url }}'
        $nugetReleasePullRequestNodeStatus = [string]::IsNullOrWhiteSpace('${{ needs.release-flow-args.outputs.nuget-release-pull-request-node-status }}') `
          ? $nugetReleasePullRequestNodeStatus `
          : '${{ needs.release-flow-args.outputs.nuget-release-pull-request-node-status }}'
        $nugetReleasePullRequestUrl = [string]::IsNullOrWhiteSpace('${{ needs.release-flow-args.outputs.nuget-release-pull-request-url }}') `
          ? $nugetReleasePullRequestUrl `
          : '${{ needs.release-flow-args.outputs.nuget-release-pull-request-url }}'
        $publishNugetNodeStatus = [string]::IsNullOrWhiteSpace('${{ needs.release-flow-args.outputs.publish-nuget-node-status }}') `
          ? $publishNugetNodeStatus `
          : '${{ needs.release-flow-args.outputs.publish-nuget-node-status }}'
        $publishNugetUrl = [string]::IsNullOrWhiteSpace('${{ needs.release-flow-args.outputs.publish-nuget-url }}') `
          ? $publishNugetUrl `
          : '${{ needs.release-flow-args.outputs.publish-nuget-url }}'

        # reset nodes to default if the NuGet release flow info artifact node is an ancestor node
        $isIssueNugetReleaseNode = ![string]::IsNullOrWhiteSpace('${{ needs.release-flow-args.outputs.issue-nuget-release-node-status }}')
        $isNugetReleaseCommandHandlerNode = ![string]::IsNullOrWhiteSpace('${{ needs.release-flow-args.outputs.nuget-release-command-handler-node-status }}')
        $isNugetReleasePullRequestNode = ![string]::IsNullOrWhiteSpace('${{ needs.release-flow-args.outputs.nuget-release-pull-request-node-status }}')
        if($isIssueNugetReleaseNode) {
          $nugetReleaseCommandHandlerNodeStatus = 'default'
          $nugetReleaseCommandHandlerUrl = 'empty'
          $nugetReleasePullRequestNodeStatus = 'default'
          $nugetReleasePullRequestUrl = 'empty'
          $publishNugetNodeStatus = 'default'
          $publishNugetUrl = 'empty'
        }
        elseif($isNugetReleaseCommandHandlerNode) {
          $nugetReleasePullRequestNodeStatus = 'default'
          $nugetReleasePullRequestUrl = 'empty'
          $publishNugetNodeStatus = 'default'
          $publishNugetUrl = 'empty'
        }
        elseif($isNugetReleasePullRequestNode) {
          $publishNugetNodeStatus = 'default'
          $publishNugetUrl = 'empty'
        }

        # there's no default for nuget id and nuget version, they need to be passed in the first time and then
        # their value is read from the nuget release flow comment
        $nugetId = [string]::IsNullOrWhiteSpace('${{ steps.parse-nuget-flow-data.outputs.nuget-id }}') `
          ? '${{ needs.release-flow-args.outputs.nuget-id }}' `
          : '${{ steps.parse-nuget-flow-data.outputs.nuget-id }}'
        $nugetVersion = [string]::IsNullOrWhiteSpace('${{ steps.parse-nuget-flow-data.outputs.nuget-version }}') `
          ? '${{ needs.release-flow-args.outputs.nuget-version }}' `
          : '${{ steps.parse-nuget-flow-data.outputs.nuget-version }}'

        Write-Output "::set-output name=nuget-id::$nugetId"
        Write-Output "::set-output name=nuget-version::$nugetVersion"
        Write-Output "::set-output name=nuget-release-status::${{ needs.release-flow-args.outputs.nuget-release-status }}"
        Write-Output "::set-output name=nuget-release-badge-color::${{ needs.release-flow-args.outputs.nuget-release-badge-color }}"
        Write-Output "::set-output name=issue-nuget-release-node-status::$issueNugetReleaseNodeStatus"
        Write-Output "::set-output name=issue-nuget-release-url::$issueNugetReleaseUrl"
        Write-Output "::set-output name=nuget-release-command-handler-node-status::$nugetReleaseCommandHandlerNodeStatus"
        Write-Output "::set-output name=nuget-release-command-handler-url::$nugetReleaseCommandHandlerUrl"
        Write-Output "::set-output name=nuget-release-pull-request-node-status::$nugetReleasePullRequestNodeStatus"
        Write-Output "::set-output name=nuget-release-pull-request-url::$nugetReleasePullRequestUrl"
        Write-Output "::set-output name=publish-nuget-node-status::$publishNugetNodeStatus"
        Write-Output "::set-output name=publish-nuget-url::$publishNugetUrl"
    - name: Dump outputs from previous step
      env:
        STEP_OUTPUT: ${{ toJSON(steps.nuget-release-flow-info.outputs) }}
      run: $env:STEP_OUTPUT
    - name: Render issue comment template
      id: render-issue-comment-template
      uses: chuhlomin/render-template@v1.5
      with:
        template: .github/workflows/templates/nuget-release-flow/nuget-release-flow-issue-comment.md
        vars: |
          nugetId: '${{ steps.nuget-release-flow-info.outputs.nuget-id }}'
          nugetVersion: '${{ steps.nuget-release-flow-info.outputs.nuget-version }}'
          nugetReleaseStatus: '${{ steps.nuget-release-flow-info.outputs.nuget-release-status }}'
          nugetReleaseBadgeColor: '${{ steps.nuget-release-flow-info.outputs.nuget-release-badge-color }}'
          issueNugetReleaseNodeStatus: '${{ steps.nuget-release-flow-info.outputs.issue-nuget-release-node-status }}'
          issueNugetReleaseUrl: '${{ steps.nuget-release-flow-info.outputs.issue-nuget-release-url }}'
          nugetReleaseCommandHandlerNodeStatus: '${{ steps.nuget-release-flow-info.outputs.nuget-release-command-handler-node-status }}'
          nugetReleaseCommandHandlerUrl: '${{ steps.nuget-release-flow-info.outputs.nuget-release-command-handler-url }}'
          nugetReleasePullRequestNodeStatus: '${{ steps.nuget-release-flow-info.outputs.nuget-release-pull-request-node-status }}'
          nugetReleasePullRequestUrl: '${{ steps.nuget-release-flow-info.outputs.nuget-release-pull-request-url }}'
          publishNugetNodeStatus: '${{ steps.nuget-release-flow-info.outputs.publish-nuGet-node-status }}'
          publishNugetUrl: '${{ steps.nuget-release-flow-info.outputs.publish-nuGet-url }}'
    - name: Update issue with NuGet flow comment
      uses: edumserrano/find-create-or-update-comment@v1
      with:
        issue-number: ${{ needs.release-flow-args.outputs.issue-number }}
        body-includes: '<!-- nuget-release-flow -->'
        comment-author: github-actions[bot]
        body: ${{ steps.render-issue-comment-template.outputs.result }}
        edit-mode: replace

  close-release-issue:
    name: Close NuGet release issue
    needs: [update-release-flow-diagram]
    if: github.event.workflow_run.conclusion != 'skipped' && github.event.workflow_run.name == 'NuGet publish'
    environment: nuget-release-flow-workflow
    permissions:
      contents: read
      issues: write
    runs-on: ubuntu-latest
    steps:
    - name: Download GitHub release info artifact
      uses: dawidd6/action-download-artifact@v2.21.1
      with:
        workflow: ${{ github.event.workflow_run.workflow_id }}
        name:  github-release-info
        run_id: ${{ github.event.workflow_run.id }}
    - name: Read GitHub release info artifact
      id: github-release-info
      shell: pwsh
      run: |
        $githubReleaseInfo = Get-Content ./github-release-info.md | ConvertFrom-Json
        Write-Output "::set-output name=issue-number::$($githubReleaseInfo.issueNumber)"
        Write-Output "::set-output name=nuget-id::$($githubReleaseInfo.nugetId)"
        Write-Output "::set-output name=nuget-version::$($githubReleaseInfo.nugetVersion)"
        Write-Output "::set-output name=github-release-url::$($githubReleaseInfo.githubReleaseUrl)"
    - name: Render close issue comment template
      id: render-issue-comment-template
      uses: chuhlomin/render-template@v1.5
      with:
        template: .github/workflows/templates/nuget-release-flow/nuget-released-successfully-issue-comment.md
        vars: |
          nugetId: '${{ steps.github-release-info.outputs.nuget-id }}'
          nugetVersion: '${{ steps.github-release-info.outputs.nuget-version }}'
          nugetUrl: 'https://www.nuget.org/packages/${{ steps.github-release-info.outputs.nuget-id }}'
          gitHubReleaseUrl: '${{ steps.github-release-info.outputs.github-release-url }}'
    - name: Update issue with NuGet released comment
      uses: edumserrano/find-create-or-update-comment@v1
      with:
        issue-number: ${{ steps.github-release-info.outputs.issue-number }}
        body-includes: '<!-- nuget-released -->'
        comment-author: github-actions[bot]
        body: ${{ steps.render-issue-comment-template.outputs.result }}
        edit-mode: replace
    - name: Close NuGet release issue
      env:
        GITHUB_TOKEN: ${{ secrets.REPOSITORY_DISPATCH_GH_TOKEN }}
      run: |
        gh issue close ${{ steps.github-release-info.outputs.issue-number }}
