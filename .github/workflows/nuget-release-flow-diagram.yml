name: NuGet release flow diagram

on:
  workflow_run:
    workflows: [
      "NuGet release",
      "NuGet release flow command handler",
      "NuGet publish"
    ]
    types:
    - completed
  pull_request:
    branches: [ main ]
    types: [ closed ]

defaults:
  run:
    shell: pwsh

jobs:
  on-workflow-run:
    name: Trigger NuGet release flow
    if: github.event_name == 'workflow_run'
    environment: nuget-release-flow-workflow
    permissions:
      contents: read
    runs-on: ubuntu-latest
    steps:
    - name: Dump github context
      env:
        GITHUB_CONTEXT: ${{ toJSON(github) }}
      run: $env:GITHUB_CONTEXT
    - name: Checkout repository
      uses: actions/checkout@v3
    - name: Read NuGet release flow info artifact
      id: nuget-flow-info
      uses: ./.github/actions/read-nuget-release-flow-info-artifact
      with:
        workflow-id: '${{ github.event.workflow_run.workflow_id }}'
        workflow-run-id: '${{ github.event.workflow_run.id }}'
    - name: Trigger NuGet release flow action
      if: steps.nuget-flow-info.outputs.issue-number != '' # manually triggered workflows might not have an issue to update, example when using workflow_dispatch on the nuget-publish workflow
      uses: ./.github/actions/trigger-nuget-release-flow-diagram-update
      with:
        repo-dispatch-token: ${{ secrets.REPOSITORY_DISPATCH_GH_TOKEN }}
        issue-number: '${{ steps.nuget-flow-info.outputs.issue-number }}'
        nuget-id: '${{ steps.nuget-flow-info.outputs.nuget-id }}'
        nuget-version: '${{ steps.nuget-flow-info.outputs.nuget-version }}'
        nuget-release-status: '${{ steps.nuget-flow-info.outputs.nuget-release-status }}'
        nuget-release-badge-color: '${{ steps.nuget-flow-info.outputs.nuget-release-badge-color }}'
        issue-nuget-release-node-status: '${{ steps.nuget-flow-info.outputs.issue-nuget-release-node-status }}'
        issue-nuget-release-url: '${{ steps.nuget-flow-info.outputs.issue-nuget-release-url }}'
        nuget-release-command-handler-node-status: '${{ steps.nuget-flow-info.outputs.nuget-release-command-handler-node-status }}'
        nuget-release-command-handler-url: '${{ steps.nuget-flow-info.outputs.nuget-release-command-handler-url }}'
        publish-nuget-node-status: '${{ steps.nuget-flow-info.outputs.publish-nuget-node-status }}'
        publish-nuget-url: '${{ steps.nuget-flow-info.outputs.publish-nuget-url }}'

  on-pr-closed:
    name: Trigger NuGet release flow update when PR is closed
    if: contains(github.event.pull_request.labels.*.name, 'nuget-release')
    environment: nuget-release-flow-workflow
    permissions:
      contents: read
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    - name: Get release info run id
      id: release-info
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        $statusesAsJson = gh api repos/${{ github.repository }}/commits/${{ github.event.pull_request.head.sha }}/statuses
        $statuses = $statusesAsJson | ConvertFrom-Json
        Write-Host $statuses
        $nugetReleaseInfoStatus = $statuses | Where-Object {$_.context -eq "NuGet release command handler / NuGet release info (repository_dispatch)"}
        $nugetReleaseInfoWorkflowUrl = $nugetReleaseInfoStatus.target_url
        $runId = $nugetReleaseInfoWorkflowUrl.Split("/")[-1]
        Write-Host "run-id=$runId"
        Write-Host "::set-output name=run-id::$runId"
    - name: Download NuGet release info artifact
      uses: dawidd6/action-download-artifact@v2.17.0
      with:
        workflow: nuget-release-command-handler.yml
        name:  nuget-release-info
        run_id: ${{ steps.release-info.outputs.run-id }}
    - name: Prepare NuGet release info
      id: nuget-release-info
      run: |
        $nugetInfoPath = "./nuget-release-info.md"
        $nugetInfoJson = Get-Content $nugetInfoPath
        $nugetInfo = $nugetInfoJson | ConvertFrom-Json
        $issueNumber = $nugetInfo.issueNumber
        Write-Host "::set-output name=issue-number::$issueNumber"
    - name: Set NuGet release flow info
      id: set-nuget-release-flow-info
      run: |
        $prMerged = [System.Convert]::ToBoolean('${{ github.event.pull_request.merged }}')
        if($prMerged) {
          $workflowStatus = "ok"
          $releaseStatus = "in%20progress"
          $releaseBadgeColor = "blue"
        }
        else {
          $workflowStatus = "error"
          $releaseStatus = "failed"
          $releaseBadgeColor = "red"
        }

        Write-Host "::set-output name=issue-number::${{ steps.nuget-release-info.outputs.issue-number }}"
        Write-Host "::set-output name=nuget-release-status::$releaseStatus"
        Write-Host "::set-output name=nuget-release-badge-color::$releaseBadgeColor"
        Write-Host "::set-output name=nuget-release-pull-request-node-status::$workflowStatus"
        Write-Host "::set-output name=nuget-release-pull-request-url::${{ github.event.pull_request.html_url }}"
    - name: Update NuGet release flow diagram
      uses: ./.github/actions/trigger-nuget-release-flow-diagram-update
      with:
        repo-dispatch-token: ${{ secrets.REPOSITORY_DISPATCH_GH_TOKEN }}
        issue-number: '${{ needs.release-info.outputs.issue-number }}'
        nuget-release-status: '${{ steps.set-nuget-release-flow-info.outputs.nuget-release-status }}'
        nuget-release-badge-color: '${{ steps.set-nuget-release-flow-info.outputs.nuget-release-badge-color }}'
        nuget-release-pull-request-node-status: '${{ steps.set-nuget-release-flow-info.outputs.nuget-release-pull-request-node-status }}'
        nuget-release-pull-request-url: '${{ steps.set-nuget-release-flow-info.outputs.nuget-release-pull-request-url }}'
