name: Issue - NuGet release

on:
  issues:
    types: [opened, reopened]

defaults:
  run:
    shell: pwsh

jobs:
  main:
    name: Parse issue and trigger NuGet release
    if: contains(github.event.issue.labels.*.name, 'nuget-release')
    environment: issue-nuget-release-workflow
    permissions:
      contents: read
      issues: write
    runs-on: ubuntu-latest
    outputs:
      nuget-id: ${{ steps.setup-client-payload.outputs.nuget-id }}
      nuget-version: ${{ steps.setup-client-payload.outputs.nuget-version }}
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    - uses: stefanbuck/github-issue-parser@v2
      id: issue-parser
      with:
        template-path: .github/ISSUE_TEMPLATE/nuget-release.yml
    - name: Show parsed data JSON
      run: |
        Write-Host "${{ steps.issue-parser.outputs.jsonString }}"
    - name: Create client payload for repository dispatch event
      id: setup-client-payload
      run: |
        $issueForm = '${{ steps.issue-parser.outputs.jsonString }}' | ConvertFrom-Json
        # the properties on the issueForm variable are kebab case. To access them in powershell I need to use single quotes around the property names
        $autoGenerateReleaseNotes = $issueForm.'auto-generate-release-notes' -eq 'yes'
        $nugetId = $issueForm.'nuget-id'
        $nugetVersion = $issueForm.'nuget-version'
        $clientPayload = @{
          issueNumber = ${{ github.event.issue.number }}
          nugetId = $nugetId
          nugetVersion = $nugetVersion
          customReleaseNotes = $issueForm.'custom-release-notes'
          autoGenerateReleaseNotes = $autoGenerateReleaseNotes
        }
        $clientPayloadAsJson = $clientPayload | ConvertTo-Json -Compress
        Write-Host $clientPayloadAsJson
        Write-Host "::set-output name=client-payload::$clientPayloadAsJson"
        Write-Host "::set-output name=nuget-id::$nugetId"
        Write-Host "::set-output name=nuget-version::$nugetVersion"
    - name: Update issue title
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        gh issue edit ${{ github.event.issue.number }} --title "Release ${{ steps.setup-client-payload.outputs.nuget-id }} ${{ steps.setup-client-payload.outputs.nuget-version }} NuGet package"
    - name: Update issue labels
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        $label = '${{ steps.setup-client-payload.outputs.nuget-id }}'
        gh issue edit ${{ github.event.issue.number }} --add-label $label
    - name: Trigger NuGet release command via repository dispatch
      uses: peter-evans/repository-dispatch@v1.1.3
      with:
        token: ${{ secrets.REPOSITORY_DISPATCH_GH_TOKEN }}
        repository: ${{ github.repository}}
        event-type: nuget-release-command
        client-payload: '${{ steps.setup-client-payload.outputs.client-payload }}'

  trigger-nuget-release-flow:
    name: Trigger NuGet release flow
    needs: [main]
    if: always() && needs.main.result != 'skipped'
    environment: issue-nuget-release-workflow
    permissions:
      contents: read
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    - name: Set NuGet release flow info
      id: set-nuget-release-flow-info
      run: |
        $workflowResult = '${{ needs.main.result }}'
        if($workflowResult -eq 'success') {
          $workflowStatus = "ok"
          $releaseStatus = "in%20progress"
          $releaseBadgeColor = "blue"
        }
        else {
          $workflowStatus = "error"
          $releaseStatus = "failed"
          $releaseBadgeColor = "red"
        }

        Write-Host "::set-output name=issue-number::${{ github.event.issue.number }}"
        Write-Host "::set-output name=nuget-id::${{ needs.main.outputs.nuget-id }}"
        Write-Host "::set-output name=nuget-version::${{ needs.main.outputs.nuget-version }}"
        Write-Host "::set-output name=nuget-release-status::$releaseStatus"
        Write-Host "::set-output name=nuget-release-badge-color::$releaseBadgeColor"
        Write-Host "::set-output name=issue-nuget-release-node-status::$workflowStatus"
        Write-Host "::set-output name=issue-nuget-release-url::https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"
    - name: Trigger NuGet release flow action
      uses: ./.github/actions/trigger-nuget-release-flow
      with:
        repo-dispatch-token: ${{ secrets.REPOSITORY_DISPATCH_GH_TOKEN }}
        issue-number: '${{ steps.set-nuget-release-flow-info.outputs.issue-number }}'
        nuget-id: '${{ steps.set-nuget-release-flow-info.outputs.nuget-id }}'
        nuget-version: '${{ steps.set-nuget-release-flow-info.outputs.nuget-version }}'
        nuget-release-status: '${{ steps.set-nuget-release-flow-info.outputs.nuget-release-status }}'
        nuget-release-badge-color: '${{ steps.set-nuget-release-flow-info.outputs.nuget-release-badge-color }}'
        issue-nuget-release-node-status: '${{ steps.set-nuget-release-flow-info.outputs.issue-nuget-release-node-status }}'
        issue-nuget-release-url: '${{ steps.set-nuget-release-flow-info.outputs.issue-nuget-release-url }}'
