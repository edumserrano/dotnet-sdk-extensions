# When making changes to this file please update the corresponding documentation which can be found at /docs/dev-notes/workflows/issue-nuget-release-workflow.md

name: Issue for NuGet release

on:
  issues:
    types: [opened, reopened]

defaults:
  run:
    shell: pwsh

jobs:
  main:
    name: Parse issue and trigger NuGet release
    if: contains(github.event.issue.labels.*.name, 'nuget-release')
    environment: issue-nuget-release-workflow
    permissions:
      contents: read
      issues: write
    runs-on: ubuntu-latest
    outputs:
      nuget-id: ${{ steps.setup-client-payload.outputs.nuget-id }}
      nuget-version: ${{ steps.setup-client-payload.outputs.nuget-version }}
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    - uses: stefanbuck/github-issue-parser@v2
      id: issue-parser
      with:
        template-path: .github/ISSUE_TEMPLATE/nuget-release.yml
    - name: Show parsed data JSON
      run: |
        Write-Host "${{ steps.issue-parser.outputs.jsonString }}"
    - name: Create client payload for repository dispatch event
      id: setup-client-payload
      run: |
        $issueForm = '${{ steps.issue-parser.outputs.jsonString }}' | ConvertFrom-Json
        # the properties on the issueForm variable are kebab case. To access them in powershell I need to use single quotes around the property names
        $autoGenerateReleaseNotes = $issueForm.'auto-generate-release-notes' -eq 'yes'
        $nugetId = $issueForm.'nuget-id'
        $nugetVersion = $issueForm.'nuget-version'
        $clientPayload = @{
          issueNumber = ${{ github.event.issue.number }}
          nugetId = $nugetId
          nugetVersion = $nugetVersion
          customReleaseNotes = $issueForm.'custom-release-notes'
          autoGenerateReleaseNotes = $autoGenerateReleaseNotes
        }
        $clientPayloadAsJson = $clientPayload | ConvertTo-Json -Compress
        Write-Host $clientPayloadAsJson
        Write-Host "::set-output name=client-payload::$clientPayloadAsJson"
        Write-Host "::set-output name=nuget-id::$nugetId"
        Write-Host "::set-output name=nuget-version::$nugetVersion"
    - name: Update issue title
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        gh issue edit ${{ github.event.issue.number }} --title "Release ${{ steps.setup-client-payload.outputs.nuget-id }} ${{ steps.setup-client-payload.outputs.nuget-version }} NuGet package"
    - name: Update issue labels
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        $label = '${{ steps.setup-client-payload.outputs.nuget-id }}'
        gh issue edit ${{ github.event.issue.number }} --add-label $label
    - name: Trigger NuGet publish workflow via repository dispatch
      uses: peter-evans/repository-dispatch@v1.1.3
      with:
        token: ${{ secrets.REPOSITORY_DISPATCH_GH_TOKEN }}
        repository: ${{ github.repository}}
        event-type: nuget-release-command
        client-payload: '${{ steps.setup-client-payload.outputs.client-payload }}'

  update-release-issue:
    name: Update NuGet release issue
    needs: [main]
    if: always() && needs.main.result != 'skipped'
    environment: issue-nuget-release-workflow
    permissions:
      contents: read
      issues: write
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    - name: Check workflow status
      id: workflow-status
      run: |
        $workflowResult = '${{ needs.main.result }}'
        $workflowSuccessful = $workflowResult -eq 'success'

        if($workflowSuccessful) {
          Write-Host "::set-output name=workflow-status::ok"
          Write-Host "::set-output name=release-status::in%20progress"
          Write-Host "::set-output name=release-badge-color::blue"
        }
        else {
          Write-Host "::set-output name=workflow-status::error"
          Write-Host "::set-output name=release-status::failed"
          Write-Host "::set-output name=release-badge-color::red"
        }
    - name: Render issue comment template
      id: render-issue-comment-template
      uses: chuhlomin/render-template@v1.4
      with:
        template: .github/workflows/templates/issue-nuget-release/nuget-release-flow-issue-comment.md
        vars: |
          nugetId: '${{ needs.main.outputs.nuget-id }}'
          nugetVersion: '${{ needs.main.outputs.nuget-version }}'
          graphNodeStatus: '${{ steps.workflow-status.outputs.workflow-status }}'
          releaseStatus: '${{ steps.workflow-status.outputs.release-status }}'
          releaseBadgeColor: '${{ steps.workflow-status.outputs.release-badge-color }}'
    - name: Sanitize issue comment
      id: sanitize-issue-comment
      run: |
        $body = "${{ steps.render-issue-comment-template.outputs.result }}"
        $body = $body -replace "`n","%0A" # The content must be escaped to preserve newlines. See https://github.community/t/set-output-truncates-multiline-strings/16852/3
        Write-Host "::set-output name=body::$body"
    - name: Update issue with NuGet flow comment
      uses: ./.github/actions/create-update-comment
      with:
        issue-number: ${{ github.event.issue.number }}
        body-includes: '<!-- nuget-release-flow -->'
        comment-author: github-actions[bot]
        body: ${{ steps.sanitize-issue-comment.outputs.body }}
        edit-mode: replace
