# When making changes to this file please update the corresponding documentation which can be found at /docs/dev-notes/workflows/issue-nuget-release-workflow.md

name: Issue for NuGet release

on:
  issues:
    types: [opened, edited, reopened] # only keep opened in trigger

defaults:
  run:
    shell: pwsh

jobs:
  main:
    name: Parse issue and trigger NuGet release
    environment: issue-nuget-release-workflow
    permissions:
      contents: read
    runs-on: ubuntu-latest
    steps:
    - name: Dump github context
      shell: pwsh
      run: Write-Host '${{ toJson(github) }}'
    - name: Checkout repository
      uses: actions/checkout@v2
    - uses: stefanbuck/github-issue-parser@v2
      id: issue-parser
      with:
        template-path: .github/ISSUE_TEMPLATE/nuget-release.yml
    - name: Show parsed data JSON
      run: |
        Write-Host "${{ steps.issue-parser.outputs.jsonString }}"
    - name: Create client payload for repository dispatch event
      id: setup-client-payload
      run: |
        $issueForm = '${{ steps.issue-parser.outputs.jsonString }}' | ConvertFrom-Json
        # the properties on the issueForm variable are kebab case. To access them in powershell I need to use single quotes around the property names
        $autoGenerateReleaseNotes = $issueForm.'auto-generate-release-notes' -eq 'yes'
        $clientPayload = @{
          issueNumber = ${{ github.event.issue.number }}
          nugetId = $issueForm.'nuget-id'
          nugetVersion = $issueForm.'nuget-version'
          customReleaseNotes = $issueForm.'custom-release-notes'
          autoGenerateReleaseNotes = $autoGenerateReleaseNotes
        }
        $clientPayloadAsJson = $clientPayload | ConvertTo-Json -Compress
        Write-Host $clientPayloadAsJson
        Write-Host "::set-output name=client-payload::$clientPayloadAsJson"
    - name: Trigger NuGet publish workflow via repository dispatch
      uses: peter-evans/repository-dispatch@v1.1.3
      with:
        token: ${{ secrets.REPOSITORY_DISPATCH_GH_TOKEN }}
        repository: ${{ github.repository}}
        event-type: nuget-release-command
        client-payload: '${{ steps.setup-client-payload.outputs.client-payload }}'
