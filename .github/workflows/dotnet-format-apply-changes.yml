# When making changes to this file please update the corresponding documentation which can be found at /docs/dev-notes/workflows/dotnet-format-apply-changes-workflow.md

name: dotnet format - apply changes

on:
  workflow_run:
    workflows: ["dotnet format"]
    types:
    - completed

permissions:
  pull-requests: write

defaults:
  run:
    shell: pwsh

env:
  DOTNET_FORMAT_WORKFLOW_FILENAME : dotnet-format.yml
  WORKFLOW_HEAD_SHA : ${{ github.event.workflow_run.head_sha }}

jobs:
  on-push:
    name: Process dotnet format changes on push
    environment: dotnet-format-apply-changes-workflow
    runs-on: ubuntu-latest
    if: github.event.workflow_run.event == 'push'
    steps:
    - name: Dump secrets context
      env:
        SECRETS_CONTEXT: ${{ toJSON(secrets) }}
      run: $env:SECRETS_CONTEXT
    - name: Dump github context
      env:
        GITHUB_CONTEXT: ${{ toJSON(github) }}
      run: $env:GITHUB_CONTEXT


  on-pull-request:
    name: Process dotnet format changes on pull request
    environment: dotnet-format-apply-changes-workflow
    runs-on: ubuntu-latest
    if: github.event.workflow_run.event == 'pull_request'
    steps:
    - name: Dump secrets context
      env:
        SECRETS_CONTEXT: ${{ toJSON(secrets) }}
      run: $env:SECRETS_CONTEXT
    - name: Dump github context
      env:
        GITHUB_CONTEXT: ${{ toJSON(github) }}
      run: $env:GITHUB_CONTEXT
    - name: Checkout repository
      uses: actions/checkout@v2
      with:
        ref: ${{ env.WORKFLOW_HEAD_SHA }}
    - name: Download dotnet format workflow info artifact
      uses: dawidd6/action-download-artifact@v2.16.0
      with:
        workflow: ${{ env.DOTNET_FORMAT_WORKFLOW_FILENAME }}
        name:  dotnet-format-workflow-info
        run_id: ${{ github.event.workflow_run.id }}
    - name: Read dotnet format workflow info
      id: dotnet-format-workflow-info
      run: |
        $worfklowInfoFilePath = "./dotnet-format-workflow-info.json"
        $workflowInfoJson = Get-Content $worfklowInfoFilePath
        Write-Host $workflowInfoJson
        $workflowInfo = $workflowInfoJson | ConvertFrom-Json

        $hasChanges = $workflowInfo.hasChanges
        $workflow = $workflowInfo.workflow
        $workflowUrl = $workflowInfo.workflowUrl
        $prNumber = $workflowInfo.prNumber
        $prBranchName = $workflowInfo.prBranchName

        Write-Host "::set-output name=has-changes::$hasChanges"
        Write-Host "::set-output name=workflow::$workflow"
        Write-Host "::set-output name=workflow-url::$workflowUrl"
        Write-Host "::set-output name=pr-number::$prNumber"
        Write-Host "::set-output name=pr-branch-name::$prBranchName"

        rm $worfklowInfoFilePath # delete file so that it doesn't get pushed to the branch in the following steps
    - name: Download dotnet format changed files
      if: steps.dotnet-format-workflow-info.outputs.has-changes == 'true'
      uses: dawidd6/action-download-artifact@v2.16.0
      with:
        workflow: ${{ env.DOTNET_FORMAT_WORKFLOW_FILENAME }}
        name:  dotnet-format-files
        run_id: ${{ github.event.workflow_run.id }}
    - name: Push dotnet format changes
      if: steps.dotnet-format-workflow-info.outputs.has-changes == 'true'
      id: auto-commit-action
      uses: stefanzweifel/git-auto-commit-action@v4.13.1
      with:
        branch: ${{ steps.dotnet-format-workflow-info.outputs.pr-branch-name }}
        commit_message: dotnet format from workflow for PR ${{ steps.dotnet-format-workflow-info.outputs.pr-number }}
    - name: Setup PR comment
      if: steps.dotnet-format-workflow-info.outputs.has-changes == 'true'
      id: setup-pr-comment
      run: |
        $changesDetected = [System.Convert]::ToBoolean("${{ steps.auto-commit-action.outputs.changes_detected }}")
        if($changesDetected) {
          Write-Host "::set-output name=pr-comment-reaction::eyes"
          $commitSha = git rev-parse HEAD
          Write-Host "::set-output name=commit-sha::$commitSha"
          Write-Host "::set-output name=pr-comment-template::.github/workflows/templates/pr-dotnet-format-command-handler/dotnet-format-found-changes.md"
        }
        else {
          Write-Host "::set-output name=pr-comment-reaction::hooray"
          Write-Host "::set-output name=pr-comment-template::.github/workflows/templates/pr-dotnet-format-command-handler/dotnet-format-did-not-find-changes.md"
        }
    - name: Render comment template
      if: steps.dotnet-format-workflow-info.outputs.has-changes == 'true'
      id: render-pr-comment-template
      uses: chuhlomin/render-template@v1.4
      with:
        template: ${{ steps.setup-pr-comment.outputs.pr-comment-template }}
        vars: |
          workflow: ${{ steps.dotnet-format-workflow-info.outputs.workflow }}
          workflowUrl: ${{ steps.dotnet-format-workflow-info.outputs.workflow-url }}
          commitSha: ${{ env.WORKFLOW_HEAD_SHA }}
          pushedCommitSha: ${{ steps.setup-pr-comment.outputs.commit-sha }}
    - name: Sanitize PR comment
      if: steps.dotnet-format-workflow-info.outputs.has-changes == 'true'
      id: sanitize-pr-comment
      run: |
        $commentBody = "${{ steps.render-pr-comment-template.outputs.result }}"
        $commentBody = $commentBody -replace "`n","%0A" # The content must be escaped to preserve newlines. See https://github.community/t/set-output-truncates-multiline-strings/16852/3
        Write-Host "::set-output name=pr-comment-body::$commentBody"
    - name: Update PR with dotnet format result
      if: steps.dotnet-format-workflow-info.outputs.has-changes == 'true'
      uses: ./.github/actions/create-update-comment
      with:
        issue-number: ${{ steps.dotnet-format-workflow-info.outputs.pr-number }}
        body-includes: '[${{ steps.dotnet-format-workflow-info.outputs.workflow }}]'
        comment-author: github-actions[bot]
        body: ${{ steps.sanitize-pr-comment.outputs.pr-comment-body }}
        edit-mode: replace
        reactions: ${{ steps.setup-pr-comment.outputs.pr-comment-reaction }}
