# When making changes to this file please update the corresponding documentation which can be found at /docs/dev-notes/workflows/dotnet-format-apply-changes-workflow.md

name: dotnet format - apply changes

on:
  workflow_run:
    workflows: ["dotnet format"]
    types:
    - completed

defaults:
  run:
    shell: pwsh

env:
  DOTNET_FORMAT_WORKFLOW_FILENAME : dotnet-format.yml
  DOTNET_FORMAT_WORKFLOW_INFO_ARTIFACT : dotnet-format-workflow-info
  DOTNET_FORMAT_FILES_ARTIFACT : dotnet-format-files
  WORKFLOW_HEAD_SHA : ${{ github.event.workflow_run.head_sha }}

jobs:
  on-push-check-open-pr:
    name: Check for dotnet format open PR
    if: github.event.workflow_run.event == 'push'
    environment: disable-secrets-workflow
    permissions:
      contents: read
      pull-requests: read
    runs-on: ubuntu-latest
    outputs:
      can-create-pr: ${{ steps.open-pr-check.outputs.can-create-pr }}
    env:
      DOTNET_FORMAT_LABEL : dotnet-format
    steps:
    - name: Dump secrets context
      env:
        SECRETS_CONTEXT: ${{ toJSON(secrets) }}
      run: $env:SECRETS_CONTEXT
    - name: Dump github context
      env:
        GITHUB_CONTEXT: ${{ toJSON(github) }}
      run: $env:GITHUB_CONTEXT
    - name: Checkout repository
      uses: actions/checkout@v2
      with:
        ref: ${{ env.WORKFLOW_HEAD_SHA }}
    - name: Check for open dotnet format PRs
      id: open-pr-check
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        # Only create a PR if there isn't any dotnet format PR open. This prevents multiple pull requests being open to fix dotnet format issues.
        # Once one is merged, the workflows will create more dotnet format PRs if needed.

        $openPullRequestsResult = gh pr list --state open --label ${{ env.DOTNET_FORMAT_LABEL }}
        $canCreatePr = [string]::IsNullOrEmpty($openPullRequestsResult)
        Write-Host "::set-output name=can-create-pr::$canCreatePr"

        if($canCreatePr) {
          Write-Host "::notice::There isn't any open dotnet format PR so one will be created."
        }
        else {
          Write-Host "::warning::There's an open dotnet format PR so this workflow will NOT create a new PR."
        }

  on-push-dotnet-format:
    name: Process dotnet format changes on push
    needs: [on-push-check-open-pr]
    if: needs.on-push-check-open-pr.outputs.can-create-pr == 'true'
    environment: dotnet-format-apply-changes-workflow
    permissions:
      contents: write
      pull-requests: write
    runs-on: ubuntu-latest
    env:
      DOTNET_FORMAT_LABEL : dotnet-format
    steps:
    - name: Dump secrets context
      env:
        SECRETS_CONTEXT: ${{ toJSON(secrets) }}
      run: $env:SECRETS_CONTEXT
    - name: Dump github context
      env:
        GITHUB_CONTEXT: ${{ toJSON(github) }}
      run: $env:GITHUB_CONTEXT
    - name: Checkout repository
      uses: actions/checkout@v2
      with:
        ref: ${{ env.WORKFLOW_HEAD_SHA }}
    - name: Download dotnet format workflow info artifact
      uses: dawidd6/action-download-artifact@v2.16.0
      with:
        workflow: ${{ env.DOTNET_FORMAT_WORKFLOW_FILENAME }}
        name:  ${{ env.DOTNET_FORMAT_WORKFLOW_INFO_ARTIFACT }}
        run_id: ${{ github.event.workflow_run.id }}
    - name: Read dotnet format workflow info
      id: dotnet-format-workflow-info
      run: |
        $worfklowInfoFilePath = "./dotnet-format-workflow-info.json"
        $workflowInfoJson = Get-Content $worfklowInfoFilePath
        Write-Host $workflowInfoJson
        $workflowInfo = $workflowInfoJson | ConvertFrom-Json

        $hasChanges = $workflowInfo.hasChanges
        $workflow = $workflowInfo.workflow
        $workflowUrl = $workflowInfo.workflowUrl

        Write-Host "::set-output name=has-changes::$hasChanges"
        Write-Host "::set-output name=workflow::$workflow"
        Write-Host "::set-output name=workflow-url::$workflowUrl"

        rm $worfklowInfoFilePath # delete file so that it doesn't get pushed to the branch in the following steps
    - name: Prepare commit info
      id: commit-info
      if: steps.dotnet-format-workflow-info.outputs.has-changes == 'true'
      run: |
        $date = (Get-Date).ToString("dd-MMM-yyyy")
        $branchName = "dotnet-format-$date"
        $commitMessage = "auto dotnet format $date"
        Write-Host "::set-output name=branch-name::$branchName"
        Write-Host "Branch name set to $branchName"
        Write-Host "::set-output name=commit-message::$commitMessage"
        Write-Host "Commit message set to $commitMessage"
    - name: Git checkout new branch
      if: steps.dotnet-format-workflow-info.outputs.has-changes == 'true'
      run: |
        git checkout -b ${{ steps.commit-info.outputs.branch-name }}
    - name: Download dotnet format changed files
      if: steps.dotnet-format-workflow-info.outputs.has-changes == 'true'
      uses: dawidd6/action-download-artifact@v2.16.0
      with:
        workflow: ${{ env.DOTNET_FORMAT_WORKFLOW_FILENAME }}
        name:  ${{ env.DOTNET_FORMAT_FILES_ARTIFACT }}
        run_id: ${{ github.event.workflow_run.id }}
    - name: Push dotnet format changes to branch
      id: auto-commit-action
      if: steps.dotnet-format-workflow-info.outputs.has-changes == 'true'
      uses: stefanzweifel/git-auto-commit-action@v4.13.1
      with:
        commit_message: ${{ steps.commit-info.outputs.commit-message }}
        branch: ${{ steps.commit-info.outputs.branch-name }}
    - name: Render PR body template
      id: render-pr-body-template
      if: steps.auto-commit-action.outputs.changes_detected == 'true'
      uses: chuhlomin/render-template@v1.4
      with:
        template: .github/workflows/templates/dotnet-format-apply-changes/on-push-found-changes.md
        vars: |
          workflow: ${{ steps.dotnet-format-workflow-info.outputs.workflow }}
          workflowUrl: ${{ steps.dotnet-format-workflow-info.outputs.workflow-url }}
          commitSha: ${{ env.WORKFLOW_HEAD_SHA }}
    - name: Sanitize PR body
      id: sanitize-pr-body
      if: steps.auto-commit-action.outputs.changes_detected == 'true'
      run: |
        $body = "${{ steps.render-pr-body-template.outputs.result }}"
        $body = $body -replace "`n","%0A" # The content must be escaped to preserve newlines. See https://github.community/t/set-output-truncates-multiline-strings/16852/3
        Write-Host "::set-output name=pr-body::$body"
    - name: Create dotnet format PR
      id: create-pr
      if: steps.auto-commit-action.outputs.changes_detected == 'true'
      env:
        GITHUB_TOKEN: ${{ secrets.DOTNET_FORMAT_GH_TOKEN }}
      run: |
        $title = "${{ steps.commit-info.outputs.branch-name }}: fix code guidelines violations"
        $body = "${{ steps.sanitize-pr-body.outputs.pr-body }}"
        $prUrl = gh pr create `
          --title $title `
          --body $body `
          --label ${{ env.DOTNET_FORMAT_LABEL }} `
          --label bot:robot:
        Write-Host "::set-output name=pr-url::$prUrl"
    - name: Log info
      run: |
        $hasChanges = [System.Convert]::ToBoolean("${{ steps.auto-commit-action.outputs.changes_detected }}")
        $prUrl = "${{ steps.create-pr.outputs.pr-url }}"

        if($hasChanges) {
          Write-Host "::warning title=dotnet format::dotnet format detected code guidelines violations and a created a PR at $prUrl."
        }
        else {
          Write-Host "::notice title=dotnet format::dotnet format did NOT detect code guidelines violations on the PR at $prUrl."
        }

  on-pull-request:
    name: Process dotnet format changes on pull request
    if: github.event.workflow_run.event == 'pull_request'
    environment: dotnet-format-apply-changes-workflow
    permissions:
      pull-requests: write
    runs-on: ubuntu-latest
    steps:
    - name: Dump secrets context
      env:
        SECRETS_CONTEXT: ${{ toJSON(secrets) }}
      run: $env:SECRETS_CONTEXT
    - name: Dump github context
      env:
        GITHUB_CONTEXT: ${{ toJSON(github) }}
      run: $env:GITHUB_CONTEXT
    - name: Checkout repository
      uses: actions/checkout@v2
      with:
        ref: ${{ env.WORKFLOW_HEAD_SHA }}
        token: ${{ secrets.DOTNET_FORMAT_GH_TOKEN }}
    - name: Download dotnet format workflow info artifact
      uses: dawidd6/action-download-artifact@v2.16.0
      with:
        workflow: ${{ env.DOTNET_FORMAT_WORKFLOW_FILENAME }}
        name:  ${{ env.DOTNET_FORMAT_WORKFLOW_INFO_ARTIFACT }}
        run_id: ${{ github.event.workflow_run.id }}
    - name: Read dotnet format workflow info
      id: dotnet-format-workflow-info
      run: |
        $worfklowInfoFilePath = "./dotnet-format-workflow-info.json"
        $workflowInfoJson = Get-Content $worfklowInfoFilePath
        rm $worfklowInfoFilePath # delete file so that it doesn't get pushed to the branch in the following steps
        Write-Host $workflowInfoJson
        $workflowInfo = $workflowInfoJson | ConvertFrom-Json

        $hasChanges = $workflowInfo.hasChanges
        $workflow = $workflowInfo.workflow
        $workflowUrl = $workflowInfo.workflowUrl
        $prNumber = $workflowInfo.prNumber
        $prBranchName = $workflowInfo.prBranchName

        Write-Host "::set-output name=has-changes::$hasChanges"
        Write-Host "::set-output name=workflow::$workflow"
        Write-Host "::set-output name=workflow-url::$workflowUrl"
        Write-Host "::set-output name=pr-number::$prNumber"
        Write-Host "::set-output name=pr-branch-name::$prBranchName"
    - name: Download dotnet format changed files
      if: steps.dotnet-format-workflow-info.outputs.has-changes == 'true'
      uses: dawidd6/action-download-artifact@v2.16.0
      with:
        workflow: ${{ env.DOTNET_FORMAT_WORKFLOW_FILENAME }}
        name:  ${{ env.DOTNET_FORMAT_FILES_ARTIFACT }}
        run_id: ${{ github.event.workflow_run.id }}
    - name: Push dotnet format changes
      id: auto-commit-action
      if: steps.dotnet-format-workflow-info.outputs.has-changes == 'true'
      uses: stefanzweifel/git-auto-commit-action@v4.13.1
      with:
        branch: ${{ steps.dotnet-format-workflow-info.outputs.pr-branch-name }}
        commit_message: dotnet format from workflow for PR ${{ steps.dotnet-format-workflow-info.outputs.pr-number }}
    - name: Get dotnet format commit SHA
      id: dotnet-format-commit
      if: steps.dotnet-format-workflow-info.outputs.has-changes == 'true'
      run: |
          $commitSha = git rev-parse HEAD
          Write-Host "::set-output name=commit-sha::$commitSha"
    - name: Render comment template
      id: render-pr-comment-template
      if: steps.dotnet-format-workflow-info.outputs.has-changes == 'true'
      uses: chuhlomin/render-template@v1.4
      with:
        template: .github/workflows/templates/dotnet-format-apply-changes/on-pr-found-changes.md
        vars: |
          workflow: ${{ steps.dotnet-format-workflow-info.outputs.workflow }}
          workflowUrl: ${{ steps.dotnet-format-workflow-info.outputs.workflow-url }}
          commitSha: ${{ env.WORKFLOW_HEAD_SHA }}
          pushedCommitSha: ${{ steps.dotnet-format-commit.outputs.commit-sha }}
    - name: Sanitize PR comment
      id: sanitize-pr-comment
      if: steps.dotnet-format-workflow-info.outputs.has-changes == 'true'
      run: |
        $commentBody = "${{ steps.render-pr-comment-template.outputs.result }}"
        $commentBody = $commentBody -replace "`n","%0A" # The content must be escaped to preserve newlines. See https://github.community/t/set-output-truncates-multiline-strings/16852/3
        Write-Host "::set-output name=pr-comment-body::$commentBody"
    - name: Update PR with dotnet format result
      if: steps.dotnet-format-workflow-info.outputs.has-changes == 'true'
      uses: ./.github/actions/create-update-comment
      with:
        issue-number: ${{ steps.dotnet-format-workflow-info.outputs.pr-number }}
        body-includes: '<!-- on-pr-dotnet-format -->'
        comment-author: github-actions[bot]
        body: ${{ steps.sanitize-pr-comment.outputs.pr-comment-body }}
        edit-mode: replace
        reactions: eyes
    - name: Log info
      run: |
        $hasChanges = [System.Convert]::ToBoolean("${{ steps.dotnet-format-workflow-info.outputs.has-changes }}")
        $prUrl = "https://github.com/${{ github.repository }}/pull/${{ steps.dotnet-format-workflow-info.outputs.pr-number }}"

        if($hasChanges) {
          Write-Host "::warning title=dotnet format::dotnet format detected code guidelines violations and a commit was pushed to a PR at $prUrl."
        }
        else {
          Write-Host "::notice title=dotnet format::dotnet format did NOT detect code guidelines violations on the PR at $prUrl."
        }

