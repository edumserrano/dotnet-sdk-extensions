# When making changes to this file please update the corresponding documentation which can be found at /docs/dev-notes/workflows/markdown-link-needs-issue-check-workflow.md

name: Markdown link check - broken links

on:
  workflow_run:
    workflows: ["Markdown link check"]
    types:
    - completed

defaults:
  run:
    shell: pwsh

env:
  MLC_WORKFLOW_FILENAME : markdown-link-check.yml
  MLC_WORKFLOW_INFO_ARTIFACT : markdown-link-check-workflow-info
  MLC_LABEL : markdown-link-check
  WORKFLOW_HEAD_SHA : ${{ github.event.workflow_run.head_sha }}

jobs:
  on-push-check:
    name: Check for markdown link check open issue
    if: github.event.workflow_run.event == 'push'
    environment: no-secrets-workflow
    permissions:
      contents: read
      issues: read
    runs-on: ubuntu-latest
    outputs:
      has-broken-links: ${{ steps.mlc-workflow-info.outputs.has-broken-links }}
      workflow: ${{ steps.mlc-workflow-info.outputs.workflow }}
      workflow-url: ${{ steps.mlc-workflow-info.outputs.workflow-url }}
      can-create-issue: ${{ steps.open-issue-check.outputs.can-create-issue }}
      create-issue: ${{ steps.needs-issue-check.outputs.create-issue }}
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
      with:
        ref: ${{ env.WORKFLOW_HEAD_SHA }}
    - name: Download markdown link check workflow info artifact
      uses: dawidd6/action-download-artifact@v2.16.0
      with:
        workflow: ${{ env.MLC_WORKFLOW_FILENAME }}
        name:  ${{ env.MLC_WORKFLOW_INFO_ARTIFACT }}
        run_id: ${{ github.event.workflow_run.id }}
    - name: Read markdown link check workflow info
      id: mlc-workflow-info
      run: |
        $worfklowInfoFilePath = "./markdown-link-check-workflow-info.json"
        $workflowInfoJson = Get-Content $worfklowInfoFilePath
        Write-Host $workflowInfoJson
        $workflowInfo = $workflowInfoJson | ConvertFrom-Json

        $hasBrokenLinks = $workflowInfo.hasBrokenLinks
        $workflow = $workflowInfo.workflow
        $workflowUrl = $workflowInfo.workflowUrl

        Write-Host "::set-output name=has-broken-links::$hasBrokenLinks"
        Write-Host "::set-output name=workflow::$workflow"
        Write-Host "::set-output name=workflow-url::$workflowUrl"
    - name: Check for open markdown link check issues
      id: open-issue-check
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        # Only create an issue if there isn't any markdown link check issue open. This issueevents multiple pull requests being open to fix markdown issues.
        # Once one is merged, the workflows will create more markdown link check issues if needed.

        $openIssuesResult = gh issue list --state open --label ${{ env.MLC_LABEL }}
        $canCreateIssue = [string]::IsNullOrEmpty($openIssuesResult)
        Write-Host "::set-output name=can-create-issue::$canCreateIssue"
    - name: Check if an issue needs to be created
      id: needs-issue-check
      run: |
        $hasBrokenLinks = [System.Convert]::ToBoolean("${{ steps.mlc-workflow-info.outputs.has-broken-links }}")
        $canCreateIssue = [System.Convert]::ToBoolean("${{ steps.open-issue-check.outputs.can-create-issue }}")
        $createIssue = $canCreateIssue -and $hasBrokenLinks
        Write-Host "::set-output name=create-issue::$createIssue"
    - name: Log info
      run: |
        $hasBrokenLinks = [System.Convert]::ToBoolean("${{ steps.mlc-workflow-info.outputs.has-broken-links }}")
        $canCreateIssue = [System.Convert]::ToBoolean("${{ steps.open-issue-check.outputs.can-create-issue }}")
        $createIssue = [System.Convert]::ToBoolean("${{ steps.needs-issue-check.outputs.create-issue }}")

        if(!$hasBrokenLinks) {
          Write-Host "::notice::Markdown link check did NOT find any broken links."
        }
        elseif($hasBrokenLinks -and $canCreateIssue) {
          Write-Host "::warning::Markdown link check found broken links and so an issue will be created."
        }
        elseif($hasBrokenLinks -and !$canCreateIssue) {
          Write-Host "::warning::Markdown link check found broken links but an issue from markdown link check is already open so a new one will not be created. Only one markdown link check issue can be open at a time."
        }

  on-push:
    name: Process markdown link check on push
    needs: [on-push-check]
    if: needs.on-push-check.outputs.create-issue == 'true'
    environment: markdown-link-check-broken-links-workflow
    permissions:
      contents: read
      issues: write
    runs-on: ubuntu-latest
    env:
      WORKFLOW: ${{ needs.on-push-check.outputs.workflow }}
      WORKFLOW_URL: ${{ needs.on-push-check.outputs.workflow-url }}
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
      with:
        ref: ${{ env.WORKFLOW_HEAD_SHA }}
    - name: Render issue body template
      id: render-issue-body-template
      uses: chuhlomin/render-template@v1.4
      with:
        template: .github/workflows/templates/markdown-link-check-broken-links/broken-links-found.md
        vars: |
          workflow: ${{ env.WORKFLOW }}
          workflowUrl: ${{ env.WORKFLOW_URL }}
          commitSha: ${{ env.WORKFLOW_HEAD_SHA }}
    - name: Sanitize issue body
      id: sanitize-issue-body
      run: |
        $body = "${{ steps.render-issue-body-template.outputs.result }}"
        $body = $body -replace "`n","%0A" # The content must be escaped to preserve newlines. See https://github.community/t/set-output-truncates-multiline-strings/16852/3
        Write-Host "::set-output name=issue-body::$body"
    - name: Create markdown issue
      id: create-issue
      env:
        GITHUB_TOKEN: ${{ secrets.MARKDOWN_LINK_CHECK_GH_TOKEN }}
      run: |
        $title = "Markdown link check found broken links"
        $body = "${{ steps.sanitize-issue-body.outputs.issue-body }}"
        $issueUrl = gh issue create `
          --title $title `
          --body $body `
          --label ${{ env.MLC_LABEL }} `
          --label bot:robot:
        Write-Host "::set-output name=issue-url::$issueUrl"
    - name: Log info
      run: |
        $issueUrl = "${{ steps.create-issue.outputs.issue-url }}"
        Write-Host "::warning title=Markdown link check::An issue to report broken markdown links was created at $issueUrl."
