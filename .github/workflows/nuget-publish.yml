name: Publish NuGet packages

on:
  pull_request:
    branches: [ main ]
    types: [ closed ]

defaults:
  run:
    shell: pwsh

jobs:
  release-info:
    name: Get NuGet release info
    if: contains(github.event.pull_request.labels.*.name, 'nuget-release')
    environment: nuget-push-workflow
    permissions:
      contents: read
    runs-on: ubuntu-latest
    outputs:
      release-info-run-id: ${{ steps.release-info.outputs.run-id }}
      nuget-id: ${{ steps.nuget-release-info.outputs.nuget-id }}
      nuget-version: ${{ steps.nuget-release-info.outputs.nuget-version }}
      nuget-url: ${{ steps.nuget-release-info.outputs.nuget-url }}
      auto-generate-release-notes: ${{ steps.nuget-release-info.outputs.auto-generate-release-notes }}
      issue-number: ${{ steps.nuget-release-info.outputs.issue-number }}
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    - name: Get release info run id
      id: release-info
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        $statusesAsJson = gh api repos/${{ github.repository }}/commits/${{ github.event.pull_request.head.sha }}/statuses
        $statuses = $statusesAsJson | ConvertFrom-Json
        Write-Host $statuses
        $nugetReleaseInfoStatus = $statuses | Where-Object {$_.context -eq "NuGet release command handler / NuGet release info (repository_dispatch)"}
        $nugetReleaseInfoWorkflowUrl = $nugetReleaseInfoStatus.target_url
        $runId = $nugetReleaseInfoWorkflowUrl.Split("/")[-1]
        Write-Host "run-id=$runId"
        Write-Host "::set-output name=run-id::$runId"
    - name: Download NuGet release info artifact
      uses: dawidd6/action-download-artifact@v2.17.0
      with:
        workflow: nuget-release-command-handler.yml
        name:  nuget-release-info
        run_id: ${{ steps.release-info.outputs.run-id }}
    - name: Prepare NuGet release info
      id: nuget-release-info
      run: |
        $nugetInfoPath = "./nuget-release-info.md"
        $nugetInfoJson = Get-Content $nugetInfoPath
        $nugetInfo = $nugetInfoJson | ConvertFrom-Json

        $nugetId = $nugetInfo.nugetId
        $nugetVersion = $nugetInfo.nugetVersion
        $nugetUrl = $nugetInfo.nugetUrl
        $autoGenerateReleaseNotes = $nugetInfo.autoGenerateReleaseNotes
        $issueNumber = $nugetInfo.issueNumber

        Write-Host "::set-output name=nuget-id::$nugetId"
        Write-Host "::set-output name=nuget-version::$nugetVersion"
        Write-Host "::set-output name=nuget-url::$nugetUrl"
        Write-Host "::set-output name=auto-generate-release-notes::$autoGenerateReleaseNotes"
        Write-Host "::set-output name=issue-number::$issueNumber"

  trigger-nuget-release-flow-after-pr-close:
    name: Trigger NuGet release flow after PR is closed
    needs: [release-info]
    if: contains(github.event.pull_request.labels.*.name, 'nuget-release')
    environment: nuget-push-workflow
    permissions:
      contents: read
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    - name: Set NuGet release flow info
      id: set-nuget-release-flow-info
      run: |
        $prMerged = [System.Convert]::ToBoolean('${{ github.event.pull_request.merged }}')
        if($prMerged) {
          $workflowStatus = "ok"
          $releaseStatus = "in%20progress"
          $releaseBadgeColor = "blue"
        }
        else {
          $workflowStatus = "error"
          $releaseStatus = "failed"
          $releaseBadgeColor = "red"
        }

        Write-Host "::set-output name=issue-number::${{ github.event.client_payload.issueNumber }}"
        Write-Host "::set-output name=nuget-release-status::$releaseStatus"
        Write-Host "::set-output name=nuget-release-badge-color::$releaseBadgeColor"
        Write-Host "::set-output name=nuget-release-pull-request-node-status::$workflowStatus"
        Write-Host "::set-output name=nuget-release-pull-request-url::${{ github.event.pull_request.html_url }}"
    - name: Trigger NuGet release flow action
      uses: ./.github/actions/trigger-nuget-release-flow
      with:
        repo-dispatch-token: ${{ secrets.REPOSITORY_DISPATCH_GH_TOKEN }}
        issue-number: '${{ needs.release-info.outputs.issue-number }}'
        nuget-release-status: '${{ steps.set-nuget-release-flow-info.outputs.nuget-release-status }}'
        nuget-release-badge-color: '${{ steps.set-nuget-release-flow-info.outputs.nuget-release-badge-color }}'
        nuget-release-pull-request-node-status: '${{ steps.set-nuget-release-flow-info.outputs.nuget-release-pull-request-node-status }}'
        nuget-release-pull-request-url: '${{ steps.set-nuget-release-flow-info.outputs.nuget-release-pull-request-url }}'

  publish-nuget:
    name: Publish NuGet package and symbols
    needs: [release-info]
    if: github.event.pull_request.merged == true && contains(github.event.pull_request.labels.*.name, 'nuget-release')
    environment: nuget-push-workflow
    permissions:
      contents: write
      issues: write
    runs-on: ubuntu-latest
    outputs:
      github-release-url: ${{ steps.create-gh-release.outputs.html_url }}
    env:
      EXTENSIONS_NUGET_BIN_FOLDER : ${{ github.workspace }}/DotNet.Sdk.Extensions/bin/Release
      TESTING_EXTENSIONS_NUGET_BIN_FOLDER : ${{ github.workspace }}/DotNet.Sdk.Extensions.Testing/bin/Release
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    - name: Download NuGet release notes artifact
      id: download-release-notes
      continue-on-error: true
      uses: dawidd6/action-download-artifact@v2.17.0
      with:
        workflow: nuget-release-command-handler.yml
        name:  nuget-release-notes
        run_id: ${{ needs.release-info.outputs.release-info-run-id }}
    - name: Download NuGet artifact
      uses: dawidd6/action-download-artifact@v2.17.0
      with:
        workflow: build-test-package.yml
        name:  nuget-packages-and-symbols
        pr: ${{ github.event.pull_request.number }}
        workflow_conclusion: success
    - name: Prepare NuGet release info
      id: nuget-release-info
      run: |
        $releaseNotesFile = './nuget-release-notes.md'
        $nugetId = '${{ needs.release-info.outputs.nuget-id }}'

        if($nugetId -eq 'dotnet-sdk-extensions') {
          $nugetArtifacts = '${{ env.EXTENSIONS_NUGET_BIN_FOLDER }}/*.nupkg,${{ env.EXTENSIONS_NUGET_BIN_FOLDER }}/*.snupkg'
          $nugetPushWorkingDir = '${{ env.EXTENSIONS_NUGET_BIN_FOLDER }}'
        }
        elseif($nugetId -eq "dotnet-sdk-extensions-testing") {
          $nugetArtifacts = '${{ env.TESTING_EXTENSIONS_NUGET_BIN_FOLDER }}/*.nupkg,${{ env.TESTING_EXTENSIONS_NUGET_BIN_FOLDER }}/*.snupkg'
          $nugetPushWorkingDir = '${{ env.TESTING_EXTENSIONS_NUGET_BIN_FOLDER }}'
        }

        Write-Host "::set-output name=nuget-release-notes-file-path::$releaseNotesFile"
        Write-Host "::set-output name=nuget-gh-release-artifacts::$nugetArtifacts"
        Write-Host "::set-output name=nuget-push-working-dir::$nugetPushWorkingDir"
    - name: Create release
      id: create-gh-release
      uses: ncipollo/release-action@v1
      with:
        commit: ${{ github.event.pull_request.merge_commit_sha }}
        tag: ${{ needs.release-info.outputs.nuget-id }}-${{ needs.release-info.outputs.nuget-version }}
        artifacts: '${{ steps.nuget-release-info.outputs.nuget-gh-release-artifacts }}'
        bodyFile: ${{ steps.nuget-release-info.outputs.nuget-release-notes-file-path }}
        generateReleaseNotes: ${{ needs.release-info.outputs.auto-generate-release-notes }}
        token: ${{ secrets.GITHUB_TOKEN }}
    - name: Publish NuGet and symbols
      id: nuget-push
      uses: ./.github/actions/nuget-push
      with:
        api-key: ${{ secrets.NUGET_PUSH_API_KEY }}
        source: https://api.nuget.org/v3/index.json
        working-directory: '${{ steps.nuget-release-info.outputs.nuget-push-working-dir }}'
    - name: Log NuGet push info
      if: always()
      run: |
        $nugetId = '${{ needs.release-info.outputs.nuget-id }}'
        $nugetUrl = '${{ needs.release-info.outputs.nuget-url }}'
        $pushStepConclusion = '${{ steps.nuget-push.conclusion }}'
        $nugetAlreadyExists = [System.Convert]::ToBoolean("${{ steps.nuget-push.outputs.nuget-already-exists }}")
        if($nugetAlreadyExists) {
          Write-Host "::notice title=$nugetId NuGet::$nugetId NuGet was NOT published to nuget.org because the version to be pushed already exists."
        }
        elseif($pushStepConclusion -eq 'failure') {
          Write-Host "::error title=$nugetIdNuGet::Failed to push $nugetId NuGet and symbols."
        }
        elseif($pushStepConclusion -eq 'success') {
          Write-Host "::notice title=$nugetId NuGet::Successfully pushed $nugetId NuGet and symbols to nuget.org. You can find the package at: $nugetUrl."
        }

  trigger-nuget-release-flow:
    name: Trigger NuGet release flow
    needs: [release-info, publish-nuget]
    if: always() && needs.publish-nuget.result != 'skipped'
    environment: nuget-push-workflow
    permissions:
      contents: read
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    - name: Set NuGet release flow info
      id: set-nuget-release-flow-info
      run: |
        $workflowResult = '${{ needs.publish-nuget.result }}'
        if($workflowResult -eq 'success') {
          $workflowStatus = "ok"
          $releaseStatus = "completed"
          $releaseBadgeColor = "green"
        }
        else {
          $workflowStatus = "error"
          $releaseStatus = "failed"
          $releaseBadgeColor = "red"
        }

        Write-Host "::set-output name=issue-number::${{ github.event.client_payload.issueNumber }}"
        Write-Host "::set-output name=nuget-release-status::$releaseStatus"
        Write-Host "::set-output name=nuget-release-badge-color::$releaseBadgeColor"
        Write-Host "::set-output name=publish-nuget-node-status::$workflowStatus"
        Write-Host "::set-output name=publish-nuget-url::https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"
    - name: Trigger NuGet release flow action
      uses: ./.github/actions/trigger-nuget-release-flow
      with:
        repo-dispatch-token: ${{ secrets.REPOSITORY_DISPATCH_GH_TOKEN }}
        issue-number: '${{ needs.release-info.outputs.issue-number }}'
        nuget-release-status: '${{ steps.set-nuget-release-flow-info.outputs.nuget-release-status }}'
        nuget-release-badge-color: '${{ steps.set-nuget-release-flow-info.outputs.nuget-release-badge-color }}'
        publish-nuget-node-status: '${{ steps.set-nuget-release-flow-info.outputs.publish-nuget-node-status }}'
        publish-nuget-url: '${{ steps.set-nuget-release-flow-info.outputs.publish-nuget-url }}'


# close issue

#  - name: Render close issue comment template
#       id: render-issue-comment-template
#       uses: chuhlomin/render-template@v1.4
#       with:
#         template: .github/workflows/templates/nuget-publish/close-nuget-release-issue.md
#         vars: |
#           nugetId: '${{ steps.nuget-release-info.outputs.nuget-id }}'
#           nugetVersion: '${{ steps.nuget-release-info.outputs.nuget-version }}'
#           nugetUrl: '${{ steps.nuget-release-info.outputs.nuget-url }}'
#           gitHubReleaseUrl: '${{ steps.create-gh-release.outputs.html_url }}'
#     - name: Sanitize issue comment
#       id: sanitize-issue-body
#       run: |
#         $body = "${{ steps.render-issue-comment-template.outputs.result }}"
#         $body = $body -replace "`n","%0A" # The content must be escaped to preserve newlines. See https://github.community/t/set-output-truncates-multiline-strings/16852/3
#         Write-Host "::set-output name=issue-comment::$body"
#     - name: Add comment to NuGet release issue
#       uses: peter-evans/create-or-update-comment@v1.4.5
#       with:
#         issue-number: ${{ steps.nuget-release-info.outputs.issue-number }}
#         body: '${{ steps.sanitize-issue-body.outputs.issue-comment }}'
#     - name: Close NuGet release issue
#       env:
#         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#       run: |
#         gh issue close ${{ steps.nuget-release-info.outputs.issue-number }}
