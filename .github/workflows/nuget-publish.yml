# When making changes to this file please update the corresponding documentation which can be found at /docs/dev-notes/workflows/nuget-publish-workflow.md

name: Publish NuGet packages

on:
  pull_request:
    branches: [ main ]
    types: [ closed ]

defaults:
  run:
    shell: pwsh

jobs:
  release-info:
    name: Get NuGet release info
    if: contains(github.event.pull_request.labels.*.name, 'nuget-release')
    environment: nuget-push-workflow
    permissions:
      contents: read
    runs-on: ubuntu-latest
    outputs:
      release-info-run-id: ${{ steps.release-info.outputs.run-id }}
      nuget-id: ${{ steps.nuget-release-info.outputs.nuget-id }}
      nuget-version: ${{ steps.nuget-release-info.outputs.nuget-version }}
      nuget-url: ${{ steps.nuget-release-info.outputs.nuget-url }}
      auto-generate-release-notes: ${{ steps.nuget-release-info.outputs.auto-generate-release-notes }}
      issue-number: ${{ steps.nuget-release-info.outputs.issue-number }}
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    - name: Get release info run id
      id: release-info
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        $statusesAsJson = gh api repos/${{ github.repository }}/commits/${{ github.event.pull_request.head.sha }}/statuses
        $statuses = $statusesAsJson | ConvertFrom-Json
        Write-Host $statuses
        $nugetReleaseInfoStatus = $statuses | Where-Object {$_.context -eq "NuGet release command handler / NuGet release info (repository_dispatch)"}
        $nugetReleaseInfoWorkflowUrl = $nugetReleaseInfoStatus.target_url
        $runId = $nugetReleaseInfoWorkflowUrl.Split("/")[-1]

        Write-Host "run-id=$runId"
        Write-Host "::set-output name=run-id::$runId"
    - name: Download NuGet release info artifact
      uses: dawidd6/action-download-artifact@v2.17.0
      with:
        workflow: nuget-release-command-handler.yml
        name:  nuget-release-info
        run_id: ${{ steps.release-info.outputs.run-id }}
    - name: Prepare NuGet release info
      id: nuget-release-info
      run: |
        $nugetInfoPath = "./nuget-release-info.md"
        $nugetInfoJson = Get-Content $nugetInfoPath
        $nugetInfo = $nugetInfoJson | ConvertFrom-Json

        $nugetId = $nugetInfo.nugetId
        $nugetVersion = $nugetInfo.nugetVersion
        $nugetUrl = $nugetInfo.nugetUrl
        $autoGenerateReleaseNotes = $nugetInfo.autoGenerateReleaseNotes
        $issueNumber = $nugetInfo.issueNumber

        Write-Host "::set-output name=nuget-id::$nugetId"
        Write-Host "::set-output name=nuget-version::$nugetVersion"
        Write-Host "::set-output name=nuget-url::$nugetUrl"
        Write-Host "::set-output name=auto-generate-release-notes::$autoGenerateReleaseNotes"
        Write-Host "::set-output name=issue-number::$issueNumber"

  update-release-issue-after-pr-close:
    name: Update NuGet release issue after PR is closed
    needs: [release-info]
    if: contains(github.event.pull_request.labels.*.name, 'nuget-release')
    environment: nuget-push-workflow
    permissions:
      contents: read
      issues: write
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    - name: Check PR merge status
      id: pr-merge-status
      run: |
        $prMerged = [System.Convert]::ToBoolean("${{ github.event.pull_request.merged }}")

        if($prMerged) {
          Write-Host "::set-output name=workflow-status::ok"
          Write-Host "::set-output name=release-status::in%20progress"
          Write-Host "::set-output name=release-badge-color::blue"
        }
        else {
          Write-Host "::set-output name=workflow-status::error"
          Write-Host "::set-output name=release-status::failed"
          Write-Host "::set-output name=release-badge-color::red"
        }
    - name: Find nuget release flow comment
      uses: peter-evans/find-comment@v1.3.0
      id: find-nuget-release-flow-comment
      with:
        issue-number: ${{ needs.release-info.outputs.issue-number}}
        body-includes: '<!-- nuget-release-flow -->'
        comment-author: github-actions[bot]
    - name: Parse node URLs from NuGet flow comment
      id: parse-node-urls
      run: |
        $commentBody = '${{ steps.find-nuget-release-flow-comment.outputs.comment-body }}'
        $commentBody -match '<!-- issue-nuget-release-url: (?<IssueNuGetReleaseUrl>.+) -->'
        $issueNuGetReleaseUrl = $Matches.IssueNuGetReleaseUrl
        $commentBody -match '<!-- nuget-release-command-handler-url: (?<NugetReleaseCommandHandlerUrl>.+) -->'
        $nugetReleaseCommandHandlerUrl = $Matches.NugetReleaseCommandHandlerUrl
        Write-Host "::set-output name=issue-nuget-release-url::$issueNuGetReleaseUrl"
        Write-Host "::set-output name=nuget-release-command-handler-url::$nugetReleaseCommandHandlerUrl"
    - name: Render issue comment template
      id: render-issue-comment-template
      uses: chuhlomin/render-template@v1.4
      with:
        template: .github/workflows/templates/nuget-publish/nuget-release-flow-when-pr-closed-issue-comment.md
        vars: |
          nugetId: '${{ needs.release-info.outputs.nuget-id }}'
          nugetVersion: '${{ needs.release-info.outputs.nuget-version }}'
          graphNodeStatus: '${{ steps.pr-merge-status.outputs.workflow-status }}'
          releaseStatus: '${{ steps.pr-merge-status.outputs.release-status }}'
          releaseBadgeColor: '${{ steps.pr-merge-status.outputs.release-badge-color }}'
          issueNuGetReleaseUrl: '${{ steps.parse-node-urls.outputs.issue-nuget-release-url }}'
          nugetReleaseCommandHandlerUrl: '${{ steps.parse-node-urls.outputs.nuget-release-command-handler-url }}'
          nugetReleasePullRequestUrl: '${{ github.event.pull_request.html_url }}'
    - name: Sanitize issue comment
      id: sanitize-issue-comment
      run: |
        $body = '${{ steps.render-issue-comment-template.outputs.result }}'
        $body = $body -replace "`n","%0A" # The content must be escaped to preserve newlines. See https://github.community/t/set-output-truncates-multiline-strings/16852/3
        Write-Host "::set-output name=body::$body"
    - name: Update issue with NuGet flow comment
      uses: ./.github/actions/create-update-comment
      with:
        issue-number: ${{ needs.release-info.outputs.issue-number}}
        body-includes: '<!-- nuget-release-flow -->'
        comment-author: github-actions[bot]
        body: ${{ steps.sanitize-issue-comment.outputs.body }}
        edit-mode: replace

  publish-nuget:
    name: Publish NuGet package and symbols
    needs: [release-info]
    if: github.event.pull_request.merged == true && contains(github.event.pull_request.labels.*.name, 'nuget-release')
    environment: nuget-push-workflow
    permissions:
      contents: write
      issues: write
    runs-on: ubuntu-latest
    outputs:
      github-release-url: ${{ steps.create-gh-release.outputs.html_url }}
    env:
      EXTENSIONS_NUGET_BIN_FOLDER : ${{ github.workspace }}/DotNet.Sdk.Extensions/bin/Release
      TESTING_EXTENSIONS_NUGET_BIN_FOLDER : ${{ github.workspace }}/DotNet.Sdk.Extensions.Testing/bin/Release
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    - name: Download NuGet release notes artifact
      id: download-release-notes
      continue-on-error: true
      uses: dawidd6/action-download-artifact@v2.17.0
      with:
        workflow: nuget-release-command-handler.yml
        name:  nuget-release-notes
        run_id: ${{ needs.release-info.outputs.release-info-run-id }}
    - name: Download NuGet artifact
      uses: dawidd6/action-download-artifact@v2.17.0
      with:
        workflow: build-test-package.yml
        name:  nuget-packages-and-symbols
        pr: ${{ github.event.pull_request.number }}
    - name: Prepare NuGet release info
      id: nuget-release-info
      run: |
        $releaseNotesFile = './nuget-release-notes.md'
        $nugetId = '${{ needs.release-info.outputs.nuget-id }}'

        if($nugetId -eq 'dotnet-sdk-extensions') {
          $nugetArtifacts = '${{ env.EXTENSIONS_NUGET_BIN_FOLDER }}/*.nupkg,${{ env.EXTENSIONS_NUGET_BIN_FOLDER }}/*.snupkg'
          $nugetPushWorkingDir = '${{ env.EXTENSIONS_NUGET_BIN_FOLDER }}'
        }
        elseif($nugetId -eq "dotnet-sdk-extensions-testing") {
          $nugetArtifacts = '${{ env.TESTING_EXTENSIONS_NUGET_BIN_FOLDER }}/*.nupkg,${{ env.TESTING_EXTENSIONS_NUGET_BIN_FOLDER }}/*.snupkg'
          $nugetPushWorkingDir = '${{ env.TESTING_EXTENSIONS_NUGET_BIN_FOLDER }}'
        }

        Write-Host "::set-output name=nuget-release-notes-file-path::$releaseNotesFile"
        Write-Host "::set-output name=nuget-gh-release-artifacts::$nugetArtifacts"
        Write-Host "::set-output name=nuget-push-working-dir::$nugetPushWorkingDir"
    - name: Create release
      id: create-gh-release
      uses: ncipollo/release-action@v1
      with:
        commit: ${{ github.event.pull_request.merge_commit_sha }}
        tag: ${{ needs.release-info.outputs.nuget-id }}-${{ needs.release-info.outputs.nuget-version }}
        artifacts: '${{ steps.nuget-release-info.outputs.nuget-gh-release-artifacts }}'
        bodyFile: ${{ steps.nuget-release-info.outputs.nuget-release-notes-file-path }}
        generateReleaseNotes: ${{ needs.release-info.outputs.auto-generate-release-notes }}
        token: ${{ secrets.GITHUB_TOKEN }}
    - name: Publish NuGet and symbols
      id: nuget-push
      uses: ./.github/actions/nuget-push
      with:
        api-key: ${{ secrets.NUGET_PUSH_API_KEY }}
        source: https://api.nuget.org/v3/index.json
        working-directory: '${{ steps.nuget-release-info.outputs.nuget-push-working-dir }}'
    - name: Log NuGet push info
      if: always()
      run: |
        $nugetId = '${{ needs.release-info.outputs.nuget-id }}'
        $nugetUrl = '${{ needs.release-info.outputs.nuget-url }}'
        $pushStepConclusion = '${{ steps.nuget-push.conclusion }}'
        $nugetAlreadyExists = [System.Convert]::ToBoolean("${{ steps.nuget-push.outputs.nuget-already-exists }}")
        if($nugetAlreadyExists) {
          Write-Host "::notice title=$nugetId NuGet::$nugetId NuGet was NOT published to nuget.org because the version to be pushed already exists."
        }
        elseif($pushStepConclusion -eq 'failure') {
          Write-Host "::error title=$nugetIdNuGet::Failed to push $nugetId NuGet and symbols."
        }
        elseif($pushStepConclusion -eq 'success') {
          Write-Host "::notice title=$nugetId NuGet::Successfully pushed $nugetId NuGet and symbols to nuget.org. You can find the package at: $nugetUrl."
        }

  update-release-issue-when-workflow-completes:
    name: Update NuGet release issue
    needs: [release-info, publish-nuget]
    if: always() && needs.publish-nuget.result != 'skipped'
    environment: nuget-push-workflow
    permissions:
      contents: read
      issues: write
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    - name: Check workflow status
      id: workflow-status
      run: |
        $workflowResult = '${{ needs.publish-nuget.result }}'
        $workflowSuccessful = $workflowResult -eq 'success'

        if($workflowSuccessful) {
          Write-Host "::set-output name=workflow-status::ok"
          Write-Host "::set-output name=release-status::completed"
          Write-Host "::set-output name=release-badge-color::green"
        }
        else {
          Write-Host "::set-output name=workflow-status::error"
          Write-Host "::set-output name=release-status::failed"
          Write-Host "::set-output name=release-badge-color::red"
        }
    - name: Find nuget release flow comment
      uses: peter-evans/find-comment@v1.3.0
      id: find-nuget-release-flow-comment
      with:
        issue-number: ${{ needs.release-info.outputs.issue-number}}
        body-includes: '<!-- nuget-release-flow -->'
        comment-author: github-actions[bot]
    - name: Parse node URLs from NuGet flow comment
      id: parse-node-urls
      run: |
        $commentBody = '${{ steps.find-nuget-release-flow-comment.outputs.comment-body }}'
        $commentBody -match '<!-- issue-nuget-release-url: (?<IssueNuGetReleaseUrl>.+) -->'
        $issueNuGetReleaseUrl = $Matches.IssueNuGetReleaseUrl
        $commentBody -match '<!-- nuget-release-command-handler-url: (?<NugetReleaseCommandHandlerUrl>.+) -->'
        $nugetReleaseCommandHandlerUrl = $Matches.NugetReleaseCommandHandlerUrl
        $commentBody -match '<!-- nuget-release-pull-request-url: (?<NugetReleasePullRequestUrl>.+) -->'
        $nugetReleasePullRequestUrl = $Matches.NugetReleasePullRequestUrl
        Write-Host "::set-output name=issue-nuget-release-url::$issueNuGetReleaseUrl"
        Write-Host "::set-output name=nuget-release-command-handler-url::$nugetReleaseCommandHandlerUrl"
        Write-Host "::set-output name=nuget-release-pull-request-url::$nugetReleasePullRequestUrl"
    - name: Render issue comment template
      id: render-issue-comment-template
      uses: chuhlomin/render-template@v1.4
      with:
        template: .github/workflows/templates/nuget-publish/nuget-release-flow-issue-comment.md
        vars: |
          nugetId: '${{ needs.release-info.outputs.nuget-id }}'
          nugetVersion: '${{ needs.release-info.outputs.nuget-version }}'
          graphNodeStatus: '${{ steps.workflow-status.outputs.workflow-status }}'
          releaseStatus: '${{ steps.workflow-status.outputs.release-status }}'
          releaseBadgeColor: '${{ steps.workflow-status.outputs.release-badge-color }}'
          issueNuGetReleaseUrl: '${{ steps.parse-node-urls.outputs.issue-nuget-release-url }}'
          nugetReleaseCommandHandlerUrl: '${{ steps.parse-node-urls.outputs.nuget-release-command-handler-url }}'
          nugetReleasePullRequestUrl: '${{ steps.parse-node-urls.outputs.nuget-release-pull-request-url }}'
          publishNugetUrl: 'https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}'
    - name: Sanitize issue comment
      id: sanitize-issue-comment
      run: |
        $body = '${{ steps.render-issue-comment-template.outputs.result }}'
        $body = $body -replace "`n","%0A" # The content must be escaped to preserve newlines. See https://github.community/t/set-output-truncates-multiline-strings/16852/3
        Write-Host "::set-output name=body::$body"
    - name: Update issue with NuGet flow comment
      uses: ./.github/actions/create-update-comment
      with:
        issue-number: ${{ needs.release-info.outputs.issue-number }}
        body-includes: '<!-- nuget-release-flow -->'
        comment-author: github-actions[bot]
        body: ${{ steps.sanitize-issue-comment.outputs.body }}
        edit-mode: replace
