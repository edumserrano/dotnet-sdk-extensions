# When making changes to this file please update the corresponding documentation which can be found at /docs/dev-notes/workflows/pr-dotnet-format-command-handler-workflow.md

name: PR dotnet format command handler

on:
  repository_dispatch:
    types: [dotnet-format-command]

permissions:
  contents: read
  pull-requests: write
  statuses: write

defaults:
  run:
    shell: pwsh

env:
  DOTNET_FORMAT_JOB_NAME: dotnet format
  STATUS_CONTEXT : ${{ github.workflow }} / dotnet format (${{ github.event_name }}) # mimic format from github checks $workflow-name / $job-name ($event-name)
  WORKFLOW_RUN_URL: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}
  PR_NUMBER: ${{ github.event.client_payload.pull_request.number }}
  PR_HEAD_SHA: ${{ github.event.client_payload.pull_request.head.sha }}
  PR_BRANCH_NAME: ${{ github.event.client_payload.pull_request.head.ref }}

jobs:
  dotnet-format:
    name: dotnet format
    if: github.event.client_payload.pull_request && github.event.client_payload.pull_request.state == 'open'
    runs-on: ubuntu-latest
    env:
      DOTNET_VERSION : 6.0.x
      SLN_FILENAME: DotNet.Sdk.Extensions.sln
      SLN_FILEPATH : ${{ github.workspace }}/DotNet.Sdk.Extensions.sln
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        ref: ${{ env.PR_HEAD_SHA }}
        token: ${{ secrets.DOTNET_FORMAT_GH_TOKEN }}
    - name: Set PR status to pending
      uses: ./.github/actions/create-gh-status
      with:
        repo: ${{ github.repository }}
        pr-num: ${{ env.PR_NUMBER }}
        context: ${{ env.STATUS_CONTEXT }}
        state: pending
        description: Waiting for status to be reported
        target-url: ${{ env.WORKFLOW_RUN_URL }}
        token: ${{ secrets.GITHUB_TOKEN }}
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}
    - name: Cache/Restore NuGets
      uses: actions/cache@v2
      with:
        path:
          ~/.nuget/packages
        key: ${{ runner.os }}-nuget-${{ env.DOTNET_VERSION }}
        restore-keys: |
          ${{ runner.os }}-nuget-
    - name: dotnet format
      run: |
        dotnet format ${{ env.SLN_FILEPATH }} --severity info --verbosity diagnostic
    - name: Push dotnet format changes
      id: auto-commit-action
      uses: stefanzweifel/git-auto-commit-action@v4.11.0
      with:
        branch: ${{ env.PR_BRANCH_NAME }}
        commit_message: dotnet format for PR ${{ env.PR_NUMBER }}
    - name: Setup PR comment
      id: setup-pr-comment
      run: |
        $changesDetected = [System.Convert]::ToBoolean("${{ steps.auto-commit-action.outputs.changes_detected }}")
        if($changesDetected) {
          Write-Host "::set-output name=pr-comment-reaction::eyes"
          $lastCommitHash = git rev-parse HEAD
          Write-Host "::set-output name=pr-last-commit-hash::$lastCommitHash"
          Write-Host "::set-output name=pr-comment-template::.github/workflows/templates/pr-dotnet-format-command-handler/dotnet-format-found-changes.md"
        }
        else {
          Write-Host "::set-output name=pr-comment-reaction::hooray"
          Write-Host "::set-output name=pr-comment-template::.github/workflows/templates/pr-dotnet-format-command-handler/dotnet-format-did-not-find-changes.md"
        }
    - name: Render comment template
      id: render-pr-comment-template
      uses: chuhlomin/render-template@v1.4
      with:
        template: ${{ steps.setup-pr-comment.outputs.pr-comment-template }}
        vars: |
          workflow: ${{ github.workflow }}
          workflowUrl: ${{ env.WORKFLOW_RUN_URL }}
          lastCommitHash: ${{ steps.setup-pr-comment.outputs.pr-last-commit-hash }}
    - name: Sanitize PR comment
      id: sanitize-pr-comment
      run: |
        $commentBody = "${{ steps.render-pr-comment-template.outputs.result }}"
        $commentBody = $commentBody -replace "`n","%0A" # The content must be escaped to preserve newlines. See https://github.community/t/set-output-truncates-multiline-strings/16852/3
        Write-Host "::set-output name=pr-comment-body::$commentBody"
    - name: Update PR with dotnet format result
      uses: ./.github/actions/create-update-comment
      with:
        issue-number: ${{ env.PR_NUMBER }}
        body-includes: PR dotnet format command handler
        comment-author: github-actions[bot]
        body: ${{ steps.sanitize-pr-comment.outputs.pr-comment-body }}
        edit-mode: replace
        reactions: ${{ steps.setup-pr-comment.outputs.pr-comment-reaction }}

  set-final-pr-status:
    name: Set final PR status
    needs: [dotnet-format]
    runs-on: ubuntu-latest
    steps:
    - name: Checkout # need to checkout because I'm using customs actions that exists on this repo
      uses: actions/checkout@v2
    - name: Get dotnet-format job execution time
      id: get-job-execution-time
      uses: ./.github/actions/get-gh-job-duration
      with:
        repo: ${{ github.repository }}
        run-id: ${{ github.run_id }}
        job-name: ${{ env.DOTNET_FORMAT_JOB_NAME }}
        token: ${{ secrets.GITHUB_TOKEN }}
    - name: Set PR status to success
      uses: ./.github/actions/create-gh-status
      with:
        repo: ${{ github.repository }}
        pr-num: ${{ env.PR_NUMBER }}
        context: ${{ env.STATUS_CONTEXT }}
        state: success
        description: Successful in ${{ steps.get-job-execution-time.outputs.job-duration }}
        target-url: ${{ env.WORKFLOW_RUN_URL }}
        token: ${{ secrets.GITHUB_TOKEN }}
    - name: Set PR status to failure
      if: needs.dotnet-format.result != 'success' || !success()
      uses: ./.github/actions/create-gh-status
      with:
        repo: ${{ github.repository }}
        pr-num: ${{ env.PR_NUMBER }}
        context: ${{ env.STATUS_CONTEXT }}
        state: failure
        description: Workflow failed or cancelled
        target-url: ${{ env.WORKFLOW_RUN_URL }}
        token: ${{ secrets.GITHUB_TOKEN }}
